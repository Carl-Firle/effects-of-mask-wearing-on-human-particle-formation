(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    388753,       8175]
NotebookOptionsPosition[    383302,       8080]
NotebookOutlinePosition[    383721,       8097]
CellTagsIndexPosition[    383678,       8094]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["myPackage", "Section",
 CellChangeTimes->{{3.9523327683984375`*^9, 
  3.952332785570322*^9}},ExpressionUUID->"84c2ba8c-37b4-5844-ae41-\
c23ee76209cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"generated", " ", "2025"}], "-", "06", "-", "13"}], ",", " ", 
    RowBox[{"by", " ", 
     RowBox[{"Dr", ".", "Carl"}], " ", "Firle"}], ",", " ", "MD"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"filename", "=", "\"\<data_preparation\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"CloudGet", "[", 
    RowBox[{
    "CloudObject", 
     "[", "\"\<https://www.wolframcloud.com/obj/firlecarl/myPackageWL.wl\>\"",
      "]"}], "]"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"myFontSize", "=", "13"}], "\[IndentingNewLine]", 
   RowBox[{"myFontStandard", "=", "\"\<Lucida Sans Unicode\>\""}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"myStyle", "[", 
    RowBox[{"\"\<Wolfram Mathematica Version 14.2\>\"", ",", "22", ",", 
     RowBox[{"Background", "->", "Yellow"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"myColorFavorits", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"TableForm", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ColorData", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{
             "3", ",", "24", ",", "35", ",", "61", ",", "97", ",", "106", ",",
               "114"}], "}"}]}], "}"}]}], "]"}], "]"}], " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ContourPlot", "[", 
          RowBox[{
           RowBox[{"x", "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"x", "^", "2"}], "+", 
              RowBox[{"y", "^", "2"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
           RowBox[{"Contours", "->", "9"}], ",", 
           RowBox[{"ContourShading", "->", 
            RowBox[{"ColorData", "[", 
             RowBox[{"i", ",", "\"\<ColorList\>\""}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{
            "3", ",", "24", ",", "35", ",", "61", ",", "97", ",", "106", ",", 
             "114"}], "}"}]}], "}"}]}], "]"}], " ", 
       "myColorGradientFavorits"}], "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DensityPlot", "[", 
          RowBox[{
           RowBox[{"y", "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"x", "^", "2"}], "+", 
              RowBox[{"3", "y"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
           RowBox[{"ColorFunction", "->", 
            RowBox[{"ColorData", "[", "i", "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            
            RowBox[{"\"\<RedBlueTones\>\"", ",", "\"\<Rainbow\>\"", 
             ",", "\"\<DarkRainbow\>\"", ",", "\"\<DarkBands\>\"", 
             ",", "\"\<BrightBands\>\"", ",", "\"\<CMYKColors\>\"", 
             ",", "\"\<Pastel\>\"", ",", "\"\<GrayTones\>\""}], "}"}]}], 
          "}"}]}], "]"}], " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"i", ",", "\"\<Image\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<DarkRainbow\>\"", ",", "\"\<Pastel\>\""}], "}"}]}], 
          "}"}]}], "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"myColors", "=", 
    RowBox[{"ColorData", "[", "61", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"myColorForGradient", "=", 
    RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"myCMYKColors", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"myBAUAColors", "[", "4", "]"}], "\n", 
   RowBox[{"myPureColors", "[", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myExportFigureList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myExportEquationList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"impPath", "=", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], 
     "~~", "\"\<\\\\Desktop\\\\source\\\\\>\""}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"path", " ", "of", " ", "source"}], "*)"}], "\n", 
   RowBox[{"exPath", "=", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], 
     "~~", "\"\<\\\\Desktop\\\\output\\\\\>\""}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"path", " ", "of", " ", "output"}], "*)"}], "\[IndentingNewLine]",
    "\n", 
   RowBox[{"pathSaveVersions", "=", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], 
     "~~", "\"\<\\\\Desktop\\\\backup\\\\\>\""}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"path", " ", "of", " ", "backup"}], "*)"}], "\n", 
   RowBox[{"NotebookOpen", "[", 
    RowBox[{
    "CloudObject", 
     "[", "\"\<https://www.wolframcloud.com/obj/firlecarl/myBackup.nb\>\"", 
     "]"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"NotebookSave", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{
      RowBox[{"Directory", "[", "]"}], "~~", "\"\<\\\\Desktop\\\\\>\"", "~~", 
      "filename", "~~", "\"\<.nb\>\""}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"myPackageInputPrint", "[", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.922342077167082*^9, 3.922342077662511*^9}, 
   3.92234285604965*^9, {3.9223430227378893`*^9, 3.922343086257572*^9}, {
   3.9223432279909177`*^9, 3.9223432467229447`*^9}, {3.9223434399463844`*^9, 
   3.92234344016198*^9}, {3.922344256539301*^9, 3.922344266778221*^9}, {
   3.9223443018389215`*^9, 3.9223443104255853`*^9}, {3.9223443514838953`*^9, 
   3.9223443568374023`*^9}, {3.9223474120653887`*^9, 
   3.9223474209758396`*^9}, {3.922347489161474*^9, 3.922347554320285*^9}, {
   3.9223478312727118`*^9, 3.9223478398701153`*^9}, {3.922947987272483*^9, 
   3.922947987330479*^9}, {3.923026167362321*^9, 3.9230261949538813`*^9}, {
   3.92302622636729*^9, 3.9230262731472607`*^9}, {3.923026547653305*^9, 
   3.9230265841179323`*^9}, {3.9230267931470995`*^9, 
   3.9230268277960663`*^9}, {3.9230273498674564`*^9, 
   3.9230273664950547`*^9}, {3.923027581499107*^9, 3.923027585638364*^9}, {
   3.9230370602938743`*^9, 3.923037075075523*^9}, {3.9252893858781343`*^9, 
   3.925289399053792*^9}, {3.932137038388235*^9, 3.932137039093562*^9}, {
   3.9323940635897417`*^9, 3.932394075149477*^9}, {3.9405837498446608`*^9, 
   3.9405837528159094`*^9}, {3.941789889494919*^9, 3.9417898901288376`*^9}, 
   3.95233269315242*^9, {3.959266335203724*^9, 3.959266370630621*^9}, {
   3.9592667184818497`*^9, 3.9592667270475693`*^9}, {3.959266760989998*^9, 
   3.9592667672556286`*^9}, {3.959266805095337*^9, 3.9592668061370068`*^9}, {
   3.9609928205322247`*^9, 3.9609928529970436`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"131f9226-1c31-7b4e-bd14-5393e6503c83"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.960992898359995*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"deffce19-0c18-0b41-873a-c7d63bf50349"],

Cell[BoxData["\<\"Lucida Sans Unicode\"\>"], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.960992898364147*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"5bc774a7-9a2f-9743-a951-b0c2577b2829"],

Cell[BoxData[
 StyleBox["\<\"Wolfram Mathematica Version 14.2\"\>",
  StripOnInput->False,
  FontFamily->"Lucida Sans Unicode",
  FontSize->22,
  Background->RGBColor[1, 1, 0]]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.9609928983671474`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e71b857b-6408-7244-94cd-7626c3d3afaf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ColorDataFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Index: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["61", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Colors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Palette: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   GraphicsBox[{{
                    RGBColor[0.70135, 0.093019, 0.00140383], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{1, 0}, 
                    Offset[{-1, -1}, {2, 1}]]}, {
                    RGBColor[0.289647, 0.222614, 0.484169], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{2, 0}, 
                    Offset[{-1, -1}, {3, 1}]]}, {
                    RGBColor[0.98677, 0.98793, 0.458686], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{3, 0}, 
                    Offset[{-1, -1}, {4, 1}]]}, {
                    RGBColor[0.42948, 0.524086, 0.719463], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{4, 0}, 
                    Offset[{-1, -1}, {5, 1}]]}, {
                    RGBColor[0.30808, 0.443137, 0.124895], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{5, 0}, 
                    Offset[{-1, -1}, {6, 1}]]}, {
                    RGBColor[0.895125, 0.71606, 0.0964523], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{6, 0}, 
                    Offset[{-1, -1}, {7, 1}]]}, {
                    RGBColor[0.138415, 0.184848, 0.429862], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{7, 0}, 
                    Offset[{-1, -1}, {8, 1}]]}, {
                    RGBColor[0.882353, 0.0253147, 0.11165], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{8, 0}, 
                    Offset[{-1, -1}, {9, 1}]]}, {
                    RGBColor[0.895125, 0.870893, 0.632624], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{9, 0}, 
                    Offset[{-1, -1}, {10, 1}]]}}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, 
                    PlotRangePadding -> None, AspectRatio -> NCache[
                    Rational[1, 10], 0.1]}], Selectable -> False, 
                   StripOnInput -> False], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Index: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["61", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Colors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Palette: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   GraphicsBox[{{
                    RGBColor[0.70135, 0.093019, 0.00140383], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{1, 0}, 
                    Offset[{-1, -1}, {2, 1}]]}, {
                    RGBColor[0.289647, 0.222614, 0.484169], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{2, 0}, 
                    Offset[{-1, -1}, {3, 1}]]}, {
                    RGBColor[0.98677, 0.98793, 0.458686], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{3, 0}, 
                    Offset[{-1, -1}, {4, 1}]]}, {
                    RGBColor[0.42948, 0.524086, 0.719463], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{4, 0}, 
                    Offset[{-1, -1}, {5, 1}]]}, {
                    RGBColor[0.30808, 0.443137, 0.124895], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{5, 0}, 
                    Offset[{-1, -1}, {6, 1}]]}, {
                    RGBColor[0.895125, 0.71606, 0.0964523], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{6, 0}, 
                    Offset[{-1, -1}, {7, 1}]]}, {
                    RGBColor[0.138415, 0.184848, 0.429862], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{7, 0}, 
                    Offset[{-1, -1}, {8, 1}]]}, {
                    RGBColor[0.882353, 0.0253147, 0.11165], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{8, 0}, 
                    Offset[{-1, -1}, {9, 1}]]}, {
                    RGBColor[0.895125, 0.870893, 0.632624], 
                    EdgeForm[
                    Opacity[0.1]], 
                    RectangleBox[{9, 0}, 
                    Offset[{-1, -1}, {10, 1}]]}}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, 
                    PlotRangePadding -> None, AspectRatio -> NCache[
                    Rational[1, 10], 0.1]}], Selectable -> False, 
                   StripOnInput -> False], "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Indexed\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Alternate name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SportShirt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ColorDataFunction[61, "Indexed", {1, 9, 1}, Part[{
     RGBColor[0.70135, 0.093019, 0.00140383], 
     RGBColor[0.289647, 0.222614, 0.484169], 
     RGBColor[0.98677, 0.98793, 0.458686], 
     RGBColor[0.42948, 0.524086, 0.719463], 
     RGBColor[0.30808, 0.443137, 0.124895], 
     RGBColor[0.895125, 0.71606, 0.0964523], 
     RGBColor[0.138415, 0.184848, 0.429862], 
     RGBColor[0.882353, 0.0253147, 0.11165], 
     RGBColor[0.895125, 0.870893, 0.632624]}, 
    Mod[
     Floor[#], 9, 1]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.960992915233675*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"2cf35779-a649-0e46-bb07-42cfc1d9034d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ColorDataFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DarkRainbow\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   GraphicsBox[{
                    RasterBox[CompressedData["
1:eJzlVPk71PsXVyglSyMtVNY2JNtVXek1FcmShPYkypLJUlokblRalHJx00WE
UsiNuhJqpEIp5jP7YDAzmBkz0S0m3ZTufP+O7w/nec7zfs5z3ue8lmMSHO0b
oqqiojJJGSHK+F++Pj51vmlUOxQjJab6zWzEmBP7/cJEeOX2OmtTUTtcGXpO
DW1s7N0QaBO1SwQX/YkZ0Zx2ZFUm+R1is+EePPzzkqcIzaKVKX9Mp6H/2hBF
r5uNX5ITacXOIrhVHvlRv5YGh8jd55/3s2Fye0YBdYUIbxLLj4uO0nDesyUv
7AMb2g25UR0mIrh7Dgxp3KOBucyheuYoG9+6LdaO6onQOtcodEUXDWYahW31
42yIv9dq6UwRYXGs1ceyqQRixVriEFUOGIbu3cu+CiHe5W5JNSHw8nX8hI4m
Bw2/8h64yIS4Rw4NozsRIBVLZteROCjfFZYQyBei3Ja7M24zgaygxbnPMjg4
mmax8Ki3EA9NN3kYBRLQNw4xaiBxsbpxqOH8CwEe69U6NccQyO4pLm7M4EJF
URmUbSdAjZrF8sizBObdEi15TeIhbat0ir97L+oUOQtnZRHI2WPyoDmDB8Pa
KI9Ty3tAFWvq1t8lMN9gv81bUgdKjRVp+TO78ZKbMCm4hkA+L//vdxkdcLx0
mv5K0YXmN0OfNd4SMM7uXtVO6kTTx0n6gx2daK3d1/+wk0DhtvnPiYxO+O64
tFOb2oH2Mhp7+wcCZrP2rGOSuiCgaufZF/EgdLAfvDuXjvNqnPrLlC58vx3X
u17KxSj1xvdRFzoGRn0cya+7MPecyNTXmoup7t90XI7QsXHgXeWX+Xw4hHiF
Bh3jwIAZYJZ5i4577I2WFcf58HF7UhpTx8bygEZH0Vs6NJob7x5o54OyzHjo
jAobZIm5h+0XOiKerDE2WNKNi5qpNtc3suB35FJAkikD70pqcogz3SgeGonN
v8pE6Lg8hubNgFW2nf5FXjeotICaCgYDp1K2nF94moG0ixXXnW170FXV8u3Z
XAau6jzOjrzHwPDJpdNHL/dgLNN27ft9dKhdj/5ocIwJhkrP5GnTe8E1eyXw
saYjQdvK7Q2ZherLmeMLUntR89j/HPsHgdE0af5xLTa8LpvHz1MX4MYG8aLd
bQQoWne/mHayQd185ouZqwAnmCff9OQR6Lsa5E2UcGBD6jxqnSLA9gPTKAcO
E9g9Y2FJYiwXhRyHj6uaBHAcydGSKvXHuNL5w4LMg17udcoGdSFmn7OqPKxJ
wEMzextvRgfOB8okm12F+LAo4a6omobGVL+KlI4OKD89uDNFqVfXApncn4bV
03XV7Us6ES4tEAQ3CUEJeblCMdIOxl+3zr0c78Kd/Vyy2mIROisnHc51piHC
z3Ky79ZuCHjahXcvKP32nXx/3UUaVL8+TRKW9GDB1o2T3CQi1Lol9UsIGvLy
Nv6M+d6LXW8Tg6Rufch6G6jrpkUg11i2VqVUicu66sbL9/vgFX3G2sCOgOSz
zUSLnxCM2g8mltP6oapf4DW0nYBD08nn1yeE0LYzP/v+UD/q66gRL04TSMqm
JuwoFcGjbI8osrUfsft7LmXeJvD+kPoaI/8+XDDNXK9jOQCLKRMloU1KX63x
GhdP9OFVTmtR5ZUBiMoXNK2WEZiiYXNixp/9IP4J1erhDiCWx0s6YEHHCFPv
k639APgbVeM0zcVQV89akxZBh6BgjLKjbQCDeQWiVTFi3LDd8vVJGR1tlC5x
QpgYis9Om0OfibF03/S/BTI66lY2BBVNkmCyO68mU0OC2tSm6OmWDNxTLea3
5EqgU3DMtNFfAs+aJEsHCgNZtAs7hn6RwlChmzZ8WwJ+n5MkoJyBM7kRDBIh
xRLPijHDIQkidceKLsoZOBzmvXlVxCDsC92D3VdLMbHm0b4qSyZ22du9CVCT
gTw28P5EihTphyINuihMNG5ON01YLQO1dGLsRrgUVtXnnqzLYGJp+HBCTpQM
znvnmNV4SvFGJcf3/lMm0s96cZ8Wy1CvbePNtZbioFflsHYvE2N5ZbZcnkx5
1zadGpsphcrN5tTj6iwE1mhcVWjJ8TQ26M4chQR5ffzFfEsWmumhYr0Ncjgu
jqet5EmwasXIy/W+LFh/eE22i5OjmpfxbUe9BKz4aYGlcSzcmGKW61Mhh/2V
8kVx+RLENBuN6xSw8MM4WRElkqPK+bXPzWQJZpAcs080sXDAqXdL2pwPsP6H
f/rpQQnuBXjZd8tZaGlZlQ5lfZHuXvKrJ2Kc4P8x+aSy3tI/g/j0QA492y61
dg0xXPf00nWV/a8J5Lp3TsqRsnX3W97uAczqXFpYppzn02HXrdvXy/HlSEda
34N+9O08GuOinN//3/zfNZT7hmfs9B1W6usRtx49yn2fpnyl13Fl6HzEnf2v
Tx+St6vrxCnxMST5kiKLZPBkbu9SLRbBh+3dM1OJ52/55b5GkTI8H2EXaCuE
MPK/WVGuxF9koZ5JXymD9axtB+e5CTHMECa4KvlyrdnHPDdZhtsOrKXmfwrw
fKulV6+SX2Pv2RUZ1EFYU4KTH4b34uy1qqg5Cga+9bddKIwfxILI+VWzC7qx
6d3K37f8xgD7dMr+SsdBaEZzBInsLmhpUB9fnMpAJcn514bPUvyMSdcd0OwE
y8WF05BOx5XSUb32v6QYPupB9lrPQ05y69exeXSEkh8M8SOk4B9Ti3kcx0Eg
1cfQppgAmXugRb5YitYT1AKDhyyYj3Ocw60IGEYZFn4TKf0QF0dLHmCAGV33
gkyhQaHGjJ9WoOQv3u6n1JCOfYPN6lWJ7SByU/3n7pHA8l9ewO077RgMZnqY
pLf9373/B1Yv4IU=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                   Selectable -> False, StripOnInput -> False], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DarkRainbow\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   GraphicsBox[{
                    RasterBox[CompressedData["
1:eJzlVPk71PsXVyglSyMtVNY2JNtVXek1FcmShPYkypLJUlokblRalHJx00WE
UsiNuhJqpEIp5jP7YDAzmBkz0S0m3ZTufP+O7w/nec7zfs5z3ue8lmMSHO0b
oqqiojJJGSHK+F++Pj51vmlUOxQjJab6zWzEmBP7/cJEeOX2OmtTUTtcGXpO
DW1s7N0QaBO1SwQX/YkZ0Zx2ZFUm+R1is+EePPzzkqcIzaKVKX9Mp6H/2hBF
r5uNX5ITacXOIrhVHvlRv5YGh8jd55/3s2Fye0YBdYUIbxLLj4uO0nDesyUv
7AMb2g25UR0mIrh7Dgxp3KOBucyheuYoG9+6LdaO6onQOtcodEUXDWYahW31
42yIv9dq6UwRYXGs1ceyqQRixVriEFUOGIbu3cu+CiHe5W5JNSHw8nX8hI4m
Bw2/8h64yIS4Rw4NozsRIBVLZteROCjfFZYQyBei3Ja7M24zgaygxbnPMjg4
mmax8Ki3EA9NN3kYBRLQNw4xaiBxsbpxqOH8CwEe69U6NccQyO4pLm7M4EJF
URmUbSdAjZrF8sizBObdEi15TeIhbat0ir97L+oUOQtnZRHI2WPyoDmDB8Pa
KI9Ty3tAFWvq1t8lMN9gv81bUgdKjRVp+TO78ZKbMCm4hkA+L//vdxkdcLx0
mv5K0YXmN0OfNd4SMM7uXtVO6kTTx0n6gx2daK3d1/+wk0DhtvnPiYxO+O64
tFOb2oH2Mhp7+wcCZrP2rGOSuiCgaufZF/EgdLAfvDuXjvNqnPrLlC58vx3X
u17KxSj1xvdRFzoGRn0cya+7MPecyNTXmoup7t90XI7QsXHgXeWX+Xw4hHiF
Bh3jwIAZYJZ5i4577I2WFcf58HF7UhpTx8bygEZH0Vs6NJob7x5o54OyzHjo
jAobZIm5h+0XOiKerDE2WNKNi5qpNtc3suB35FJAkikD70pqcogz3SgeGonN
v8pE6Lg8hubNgFW2nf5FXjeotICaCgYDp1K2nF94moG0ixXXnW170FXV8u3Z
XAau6jzOjrzHwPDJpdNHL/dgLNN27ft9dKhdj/5ocIwJhkrP5GnTe8E1eyXw
saYjQdvK7Q2ZherLmeMLUntR89j/HPsHgdE0af5xLTa8LpvHz1MX4MYG8aLd
bQQoWne/mHayQd185ouZqwAnmCff9OQR6Lsa5E2UcGBD6jxqnSLA9gPTKAcO
E9g9Y2FJYiwXhRyHj6uaBHAcydGSKvXHuNL5w4LMg17udcoGdSFmn7OqPKxJ
wEMzextvRgfOB8okm12F+LAo4a6omobGVL+KlI4OKD89uDNFqVfXApncn4bV
03XV7Us6ES4tEAQ3CUEJeblCMdIOxl+3zr0c78Kd/Vyy2mIROisnHc51piHC
z3Ky79ZuCHjahXcvKP32nXx/3UUaVL8+TRKW9GDB1o2T3CQi1Lol9UsIGvLy
Nv6M+d6LXW8Tg6Rufch6G6jrpkUg11i2VqVUicu66sbL9/vgFX3G2sCOgOSz
zUSLnxCM2g8mltP6oapf4DW0nYBD08nn1yeE0LYzP/v+UD/q66gRL04TSMqm
JuwoFcGjbI8osrUfsft7LmXeJvD+kPoaI/8+XDDNXK9jOQCLKRMloU1KX63x
GhdP9OFVTmtR5ZUBiMoXNK2WEZiiYXNixp/9IP4J1erhDiCWx0s6YEHHCFPv
k639APgbVeM0zcVQV89akxZBh6BgjLKjbQCDeQWiVTFi3LDd8vVJGR1tlC5x
QpgYis9Om0OfibF03/S/BTI66lY2BBVNkmCyO68mU0OC2tSm6OmWDNxTLea3
5EqgU3DMtNFfAs+aJEsHCgNZtAs7hn6RwlChmzZ8WwJ+n5MkoJyBM7kRDBIh
xRLPijHDIQkidceKLsoZOBzmvXlVxCDsC92D3VdLMbHm0b4qSyZ22du9CVCT
gTw28P5EihTphyINuihMNG5ON01YLQO1dGLsRrgUVtXnnqzLYGJp+HBCTpQM
znvnmNV4SvFGJcf3/lMm0s96cZ8Wy1CvbePNtZbioFflsHYvE2N5ZbZcnkx5
1zadGpsphcrN5tTj6iwE1mhcVWjJ8TQ26M4chQR5ffzFfEsWmumhYr0Ncjgu
jqet5EmwasXIy/W+LFh/eE22i5OjmpfxbUe9BKz4aYGlcSzcmGKW61Mhh/2V
8kVx+RLENBuN6xSw8MM4WRElkqPK+bXPzWQJZpAcs080sXDAqXdL2pwPsP6H
f/rpQQnuBXjZd8tZaGlZlQ5lfZHuXvKrJ2Kc4P8x+aSy3tI/g/j0QA492y61
dg0xXPf00nWV/a8J5Lp3TsqRsnX3W97uAczqXFpYppzn02HXrdvXy/HlSEda
34N+9O08GuOinN//3/zfNZT7hmfs9B1W6usRtx49yn2fpnyl13Fl6HzEnf2v
Tx+St6vrxCnxMST5kiKLZPBkbu9SLRbBh+3dM1OJ52/55b5GkTI8H2EXaCuE
MPK/WVGuxF9koZ5JXymD9axtB+e5CTHMECa4KvlyrdnHPDdZhtsOrKXmfwrw
fKulV6+SX2Pv2RUZ1EFYU4KTH4b34uy1qqg5Cga+9bddKIwfxILI+VWzC7qx
6d3K37f8xgD7dMr+SsdBaEZzBInsLmhpUB9fnMpAJcn514bPUvyMSdcd0OwE
y8WF05BOx5XSUb32v6QYPupB9lrPQ05y69exeXSEkh8M8SOk4B9Ti3kcx0Eg
1cfQppgAmXugRb5YitYT1AKDhyyYj3Ocw60IGEYZFn4TKf0QF0dLHmCAGV33
gkyhQaHGjJ9WoOQv3u6n1JCOfYPN6lWJ7SByU/3n7pHA8l9ewO077RgMZnqY
pLf9373/B1Yv4IU=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                   Selectable -> False, StripOnInput -> False], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ColorDataFunction[
  "DarkRainbow", "Gradients", {0, 1}, Blend["DarkRainbow", #]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.9609929152441845`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b7048e50-e5a6-5f4b-a5d1-d6c869bd8315"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> CMYKColor[{0, 0, 1, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[9, 10], 
        Rational[1, 5], 
        Rational[1, 2], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[3, 5], 1, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{1, 
        Rational[11, 20], 0, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[9, 10], 1, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[0, 0.09, 1, 0.03]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[9, 20], 0, 
        Rational[1, 5], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[2, 5], 
        Rational[9, 10], 1, 
        Rational[1, 2]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[9, 10], 
        Rational[2, 5], 0, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[1, 10], 
        Rational[1, 10], 
        Rational[9, 10], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[7, 20], 
        Rational[3, 10], 
        Rational[1, 5], 
        Rational[1, 5]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[7, 10], 0, 
        Rational[19, 20], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[1, 5], 
        Rational[2, 5], 
        Rational[1, 10]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[11, 20], 
        Rational[1, 4], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{1, 
        Rational[9, 10], 0, 
        Rational[1, 2]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[3, 10], 1, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[1, 5], 
        Rational[1, 10], 
        Rational[1, 5], 
        Rational[2, 5]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[1, 10], 1, 1, 
        Rational[1, 5]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[3, 5], 
        Rational[9, 10], 0, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[1, 20], 
        Rational[3, 20], 
        Rational[1, 20]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[4, 5], 
        Rational[1, 10], 
        Rational[4, 5], 
        Rational[2, 5]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[9, 10], 
        Rational[9, 10], 
        Rational[1, 5]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{1, 
        Rational[2, 5], 0, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[3, 5], 
        Rational[1, 10], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[1, 5], 
        Rational[1, 5], 
        Rational[19, 20]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[9, 20], 1, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[4, 5], 
        Rational[9, 10], 0, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[1, 5], 
        Rational[1, 2], 
        Rational[1, 5]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[1, 5], 1, 1, 
        Rational[1, 10]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[3, 10], 0, 
        Rational[9, 10], 
        Rational[2, 5]}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[99, 100], 
        Rational[13, 25], 
        Rational[1, 25], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 
        Rational[7, 10], 
        Rational[9, 10], 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{0, 1, 0, 0}]|>,
    "CMYKColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> CMYKColor[{
        Rational[1, 2], 
        Rational[9, 10], 0, 
        Rational[1, 20]}]|>,
    "CMYKColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.9609929152511845`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"22ec96c6-9dd7-804a-9fa2-98adb6f36b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> RGBColor[
      0.10196078431372549`, 0.4392156862745098, 0.7215686274509804]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.38823529411764707`, 0.38823529411764707`, 0.3843137254901961]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.9568627450980393, 0.9529411764705882, 0.9254901960784314]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.8901960784313725, 0.8980392156862745, 0.8588235294117647]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.6705882352941176, 0.8196078431372549, 0.5607843137254902]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.4588235294117647, 0.7450980392156863, 0.9176470588235294]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.9254901960784314, 0.4, 0.09019607843137255]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.9450980392156862, 0.7019607843137254, 0.]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.6705882352941176, 0.8196078431372549, 0.5607843137254902]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.06666666666666667, 0.3058823529411765, 0.5058823529411764]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.00392156862745098, 0.3607843137254902, 0.5764705882352941]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.6509803921568628, 0.8196078431372549, 0.9450980392156862]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.8117647058823529, 0.8980392156862745, 0.9725490196078431]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.960992915285185*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"5c2e2c6c-2f86-2342-ab3e-762639f749d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0, 1, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.9609929153011837`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"61db31a2-b019-4d45-93e4-616f12cb0ca2"],

Cell[BoxData["\<\"C:\\\\Users\\\\mona_\\\\Desktop\\\\source\\\\\"\>"], \
"Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.960992915312187*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"093a3b2c-9d26-d24e-8632-1d83d082be7d"],

Cell[BoxData["\<\"C:\\\\Users\\\\mona_\\\\Desktop\\\\output\\\\\"\>"], \
"Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.960992915314186*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"2da60e4c-a7a3-7846-8b43-303df735bf7f"],

Cell[BoxData["\<\"C:\\\\Users\\\\mona_\\\\Desktop\\\\backup\\\\\"\>"], \
"Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.96099291531678*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"c665af7a-885f-9046-aae5-4bd6e8eb0edc"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "93a8c5fc-d8c4-489e-b9b7-b1f5338e3ec0", 
     "d830477b-1c7c-8949-b9c5-7318f16020d9"], "label" -> "\"myBackup.nb\"", 
   "tooltip" -> InterpretationBox[
     RowBox[{"CloudObject", "[", 
       TemplateBox[{
        "\"https://www.wolframcloud.com/obj/firlecarl/myBackup.nb\"", 
         "https://www.wolframcloud.com/obj/firlecarl/myBackup.nb"}, 
        "HyperlinkURL"], "]"}], 
     CloudObject["https://www.wolframcloud.com/obj/firlecarl/myBackup.nb"], 
     SelectWithContents -> True]|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.9609929164574165`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"16c719d7-2f1e-eb42-841a-bf25a77ad8c7"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\"\"\>",
       Definition[$CellContext`myalphaVal$],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myAroundString", "[", 
               RowBox[{"l_List", "/;", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", "l", "]"}], "\[LeftDoubleBracket]",
                   "2", "\[RightDoubleBracket]"}], "\[Equal]", "2"}]}], "]"}],
               ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], 
                    "~~", "\<\" \[PlusMinus] \"\>", "~~", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
                    "]"}], "&"}], ")"}], "/@", "l"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myAroundString],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myBAUAColors", "[", 
               RowBox[{"a_Integer", ":", "5"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "bauaMainColors", ",", "bauaHighlightColors", ",", 
                  "bauaBlueColors", ",", "bauaAllColors", ",", 
                  "bauaDesignColors", ",", "bauaCMYKColors"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"bauaMainColors", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", "\<\"#1A70B8\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#636362\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#F4F3EC\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#E3E5DB\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#ABD18F\"\>", "]"}]}], 
                    "}"}]}], ",", 
                   RowBox[{"bauaHighlightColors", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", "\<\"#EC6617\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#75BEEA\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#ABD18F\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#F1B300\"\>", "]"}]}], 
                    "}"}]}], ",", 
                   RowBox[{"bauaBlueColors", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", "\<\"#114e81\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#015c93\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#1770b8\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#74bdea\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#a6d1f1\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#cfe5f8\"\>", "]"}]}], 
                    "}"}], "}"}]}], ",", 
                   RowBox[{"bauaAllColors", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", "\<\"#1A70B8\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#636362\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#F4F3EC\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#E3E5DB\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#ABD18F\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#75BEEA\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#EC6617\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#F1B300\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#ABD18F\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#114e81\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#015c93\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#a6d1f1\"\>", "]"}], ",", 
                    RowBox[{"RGBColor", "[", "\<\"#cfe5f8\"\>", "]"}]}], 
                    "}"}]}], ",", 
                   RowBox[{"bauaDesignColors", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.4588235294117647, 0.7450980392156863, 
                    0.9176470588235294]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.9254901960784314, 0.4, 0.09019607843137255]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.6705882352941176, 0.8196078431372549, 
                    0.5607843137254902]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.9450980392156862, 0.7019607843137254, 0.]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.10196078431372549`, 0.4392156862745098, 
                    0.7215686274509804]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.38823529411764707`, 0.38823529411764707`, 
                    0.3843137254901961]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8901960784313725, 0.8980392156862745, 
                    0.8588235294117647]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8117647058823529, 0.8980392156862745, 
                    0.9725490196078431]|>,
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.06666666666666667, 0.3058823529411765, 
                    0.5058823529411764]|>,
                    "RGBColorSwatchTemplate"]}], "}"}]}], ",", 
                   RowBox[{"bauaCMYKColors", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[0.85, 0.5, 0, 0]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0.85, 0.5, 0, 0, 0.7]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0.85, 0.5, 0, 0, 0.4]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0.85, 0.45, 0, 0.3]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0.85, 0.5, 0, 0.4]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> CMYKColor[0.85, 0.45, 0, 0.3, 0.7]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> CMYKColor[0.85, 0.45, 0, 0.3, 0.5]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> CMYKColor[0.85, 0.45, 0, 0.3, 0.3]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0., 0., 0, 0.75]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0., 0., 0.05, 0.06]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|
                    "color" -> CMYKColor[0.08, 0.03, 0.12, 0.07]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0.62, 0.27, 0.92, 0.7]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0.55, 0.1, 0, 0]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0., 0.75, 1, 0]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0., 0.3, 1, 0.05]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0.4, 0., 0.55, 0]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}]}], "}"}], "\[LeftDoubleBracket]", 
                 RowBox[{"a", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myBAUAColors],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myCMYKColors", "[", 
               RowBox[{"a_Integer", ":", "1"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 0, 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 5], 
                    Rational[1, 2], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[11, 20], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[0, 0.09, 1, 0.03]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 20], 0, 
                    Rational[1, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[9, 10], 1, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[2, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 10], 
                    Rational[1, 10], 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 20], 
                    Rational[3, 10], 
                    Rational[1, 5], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 10], 0, 
                    Rational[19, 20], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 5], 
                    Rational[2, 5], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[11, 20], 
                    Rational[1, 4], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[9, 10], 0, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 10], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 
                    Rational[1, 10], 
                    Rational[1, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 10], 1, 1, 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[9, 10], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 20], 
                    Rational[3, 20], 
                    Rational[1, 20]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[1, 10], 
                    Rational[4, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 
                    Rational[9, 10], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[2, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 
                    Rational[1, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 5], 
                    Rational[1, 5], 
                    Rational[19, 20]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 20], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[9, 10], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 5], 
                    Rational[1, 2], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 1, 1, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 10], 0, 
                    Rational[9, 10], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[99, 100], 
                    Rational[13, 25], 
                    Rational[1, 25], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[7, 10], 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 2], 
                    Rational[9, 10], 0, 
                    Rational[1, 20]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"Leuchtgelb\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 0, 1, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Zitronengelb\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 10], 
                    Rational[1, 10], 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Orange\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[11, 20], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Hellrosa\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 20], 
                    Rational[2, 5], 
                    Rational[1, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Altrosa\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 
                    Rational[1, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Feuerrot\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 1, 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Signalrot\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 1, 1, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Korallenrot\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 
                    Rational[9, 10], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Leuchtrot\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Reines Rot\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Weinrot\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 20], 1, 
                    Rational[13, 20], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Pink\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 0, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Lila\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 2], 
                    Rational[3, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Violett\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[9, 10], 0, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Azurblau\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[99, 100], 
                    Rational[13, 25], 
                    Rational[1, 25], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Himmelblau\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[2, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Reines Blau\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[7, 10], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Nachtblau\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[9, 10], 0, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Pastellt\[UDoubleDot]rkis\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[1, 10], 
                    Rational[1, 2], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Mintt\[UDoubleDot]rkis\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 5], 
                    Rational[1, 2], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"T\[UDoubleDot]rkis\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 10], 
                    Rational[2, 5], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    
                    RowBox[{"\<\"Leuchtgr\[UDoubleDot]n/Gelbgr\[UDoubleDot]n\"\
\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 10], 0, 
                    Rational[19, 20], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Gr\[UDoubleDot]n\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 0, 
                    Rational[4, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Grasgr\[UDoubleDot]n\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 5], 1, 
                    Rational[1, 4]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Maigr\[UDoubleDot]n\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[1, 5], 1, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Rotbraun\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[9, 10], 1, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Kastanienbraun\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 
                    Rational[3, 5], 
                    Rational[7, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Schokobraun\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[9, 10], 1, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Cremewei\[SZ]\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 20], 
                    Rational[3, 20], 
                    Rational[1, 20]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Beige\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 5], 
                    Rational[2, 5], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Silbergrau\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 10], 0, 0, 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Steingrau\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 
                    Rational[1, 10], 
                    Rational[1, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], ",", 
                    RowBox[{"\<\"Tiefschwarz\"\>", "\[Rule]", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[1, 5], 
                    Rational[1, 5], 1}]|>,
                    "CMYKColorSwatchTemplate"]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"Leuchtgelb\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 0, 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], "}"}]}], ",", 
                    RowBox[{"\<\"Zitronengelb\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 10], 
                    Rational[1, 10], 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"], "}"}]}], ",", 
                    RowBox[{"\<\"Orange\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 10], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 20], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 2], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[11, 20], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[13, 20], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[7, 10], 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Hellrosa\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 20], 
                    Rational[2, 5], 
                    Rational[1, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 2], 
                    Rational[1, 5], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Altrosa\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[11, 20], 
                    Rational[1, 4], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 
                    Rational[1, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[7, 10], 
                    Rational[3, 10], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[13, 20], 
                    Rational[2, 5], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Feuerrot\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 1, 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 10], 1, 1, 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Signalrot\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 1, 1, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 1, 
                    Rational[9, 10], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Korallenrot\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 
                    Rational[9, 10], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 
                    Rational[9, 10], 
                    Rational[3, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Leuchtrot\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 1, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Reines Rot\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 
                    Rational[7, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Weinrot\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 1, 
                    Rational[4, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 1, 
                    Rational[3, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 20], 1, 
                    Rational[13, 20], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 1, 
                    Rational[4, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Pink\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 1, 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], "}"}]}], ",", 
                    RowBox[{"\<\"Lila\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 2], 
                    Rational[3, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[7, 10], 
                    Rational[1, 20], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Violett\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 2], 
                    Rational[9, 10], 0, 
                    Rational[1, 20]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[9, 10], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[9, 10], 0, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[9, 10], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[9, 10], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 1, 0, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Azurblau\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[3, 10], 
                    Rational[1, 10], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[2, 5], 0, 
                    Rational[3, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[99, 100], 
                    Rational[13, 25], 
                    Rational[1, 25], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Himmelblau\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[2, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 2], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[3, 10], 0, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[2, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Reines Blau\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[2, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[11, 20], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[7, 10], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[4, 5], 0, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[19, 20], 
                    Rational[3, 5], 0, 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[2, 5], 0, 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Nachtblau\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[9, 10], 0, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{1, 1, 
                    Rational[2, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Pastellt\[UDoubleDot]rkis\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 20], 0, 
                    Rational[1, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[1, 10], 
                    Rational[1, 2], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 20], 0, 
                    Rational[1, 5], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Mintt\[UDoubleDot]rkis\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[1, 5], 
                    Rational[1, 2], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 10], 
                    Rational[3, 20], 
                    Rational[1, 2], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 5], 
                    Rational[1, 2], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"T\[UDoubleDot]rkis\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[1, 10], 
                    Rational[7, 20], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 10], 
                    Rational[2, 5], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    
                    RowBox[{"\<\"Leuchtgr\[UDoubleDot]n/Gelbgr\[UDoubleDot]n\"\
\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 10], 0, 
                    Rational[19, 20], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 0, 
                    Rational[19, 20], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 10], 0, 
                    Rational[9, 10], 0}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Gr\[UDoubleDot]n\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[13, 20], 0, 
                    Rational[4, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 0, 
                    Rational[4, 5], 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[17, 20], 0, 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[17, 20], 0, 1, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Grasgr\[UDoubleDot]n\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 0, 
                    Rational[9, 10], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 10], 0, 
                    Rational[9, 10], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[21, 25], 0, 1, 0}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[9, 10], 
                    Rational[1, 5], 1, 
                    Rational[1, 4]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 10], 
                    Rational[1, 10], 
                    Rational[4, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[1, 10], 
                    Rational[4, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Maigr\[UDoubleDot]n\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[4, 5], 
                    Rational[1, 5], 1, 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], "}"}]}], ",", 
                    RowBox[{"\<\"Rotbraun\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[9, 10], 1, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 20], 1, 1, 
                    Rational[4, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Kastanienbraun\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 
                    Rational[3, 5], 
                    Rational[7, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 2], 1, 1, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[9, 10], 1, 
                    Rational[4, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Schokobraun\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[9, 10], 1, 
                    Rational[1, 2]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[3, 5], 
                    Rational[9, 10], 
                    Rational[4, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[7, 10], 
                    Rational[3, 5], 
                    Rational[4, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 5], 
                    Rational[1, 5], 
                    Rational[19, 20]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 5], 
                    Rational[4, 5], 
                    Rational[4, 5], 
                    Rational[4, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Cremewei\[SZ]\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 20], 
                    Rational[3, 20], 
                    Rational[1, 20]}]|>,
                    "CMYKColorSwatchTemplate"], "}"}]}], ",", 
                    RowBox[{"\<\"Beige\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 5], 
                    Rational[2, 5], 
                    Rational[1, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 5], 
                    Rational[1, 2], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Silbergrau\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 10], 0, 0, 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], "}"}]}], ",", 
                    RowBox[{"\<\"Steingrau\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[1, 5], 
                    Rational[1, 10], 
                    Rational[1, 5], 
                    Rational[2, 5]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[7, 20], 
                    Rational[3, 10], 
                    Rational[1, 5], 
                    Rational[1, 5]}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}], ",", 
                    RowBox[{"\<\"Tiefschwarz\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[<|"color" -> CMYKColor[{1, 
                    Rational[2, 5], 
                    Rational[2, 5], 
                    Rational[9, 10]}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[2, 5], 
                    Rational[1, 5], 
                    Rational[1, 5], 1}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{
                    Rational[3, 10], 0, 0, 1}]|>,
                    "CMYKColorSwatchTemplate"], ",", 
                    TemplateBox[<|"color" -> CMYKColor[{0, 
                    Rational[1, 2], 
                    Rational[1, 5], 1}]|>,
                    "CMYKColorSwatchTemplate"]}], "}"}]}]}], "}"}]}], "}"}], "\[LeftDoubleBracket]",
                  "a", "\[RightDoubleBracket]"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myCMYKColors],
       Editable->False]},
     {
      InterpretationBox["\<\"\"\>",
       Definition[$CellContext`mycolorVal],
       Editable->False]},
     {
      InterpretationBox["\<\"\"\>",
       Definition[$CellContext`mycolorVal$],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myExportEquations", "[", "l_List", "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"id", ",", "eq"}], "}"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"id", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"eq", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{
                    "exPath", "~~", "\<\"\\\\equations\\\\\"\>", "~~", "id", 
                    "~~", "\<\".txt\"\>"}], ",", 
                    RowBox[{"ExportString", "[", 
                    RowBox[{"eq", ",", 
                    RowBox[{"{", 
                    RowBox[{"\<\"MathML\"\>", ",", "\<\"Expression\"\>"}], 
                    "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"myExportEquationList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "id"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"myExportEquationList", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"myExportEquationList", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"myExportEquationList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "id"}], "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"id", ",", "eq"}], "}"}]}]}], "]"}]}], ";"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"myExportEquationList", ",", 
                    RowBox[{"{", 
                    RowBox[{"id", ",", "eq"}], "}"}]}], "]"}]}], "]"}], ";"}],
                     ")"}], "&"}], ")"}], "/@", "l"}], " ", 
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{
                    "exPath", 
                    "~~", "\<\"\\\\equations\\\\##1 equation IDs and \
equations.pdf\"\>"}], ",", 
                    RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", "\<\"\\t\"\>"}], 
                    "]"}], "]"}], "&"}], ")"}], "/@", 
                    "myExportEquationList"}], "]"}]}], "]"}]}], ";", 
                 RowBox[{"Export", "[", 
                  RowBox[{
                   RowBox[{
                   "exPath", 
                    "~~", "\<\"\\\\equations\\\\##2 equation IDs.rtf\"\>"}], ",", 
                   RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"myExportEquationList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"exPath", "~~", "\<\"\\\\equations\\\\\"\>"}]}], 
                    "]"}], ",", "\<\"\\n\"\>"}], "]"}]}], "]"}], ";"}]}], 
               "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myExportEquations],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myExportF", "[", "l_List", "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "r", ",", "g", ",", "nameID", ",", "name", ",", "icon"}], 
                 "}"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"nameID", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"name", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "True"}], ",", 
                    RowBox[{
                    RowBox[{"r", "=", "600"}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"exPath", "~~", "\<\"CMYK \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], 
                    "~~", "\<\" dpi\\\\\"\>", "~~", "nameID", 
                    "~~", "\<\" _ \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], 
                    "~~", "\<\" dpi CMYK\"\>", "~~", "i"}], ",", 
                    RowBox[{"ColorConvert", "[", 
                    RowBox[{
                    RowBox[{"Rasterize", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"ImageResolution", "\[Rule]", "r"}]}], "]"}], 
                    ",", "\<\"CMYK\"\>"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", 
                    RowBox[{"\<\".eps\"\>", ",", "\<\".png\"\>"}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", "Nothing"}], "]"}], ";", 
                    RowBox[{"r", "=", "72"}], ";", 
                    RowBox[{"icon", "=", 
                    RowBox[{"Rasterize", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"ImageResolution", "\[Rule]", "r"}]}], "]"}]}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"exPath", "~~", 
                    RowBox[{"ToString", "[", "i", "]"}], "~~", "\<\" \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], 
                    "~~", "\<\" dpi\\\\\"\>", "~~", "nameID", 
                    "~~", "\<\" _ \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], "~~", "\<\" dpi\"\>",
                     "~~", "i"}], ",", "icon"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", "\<\".png\"\>", "}"}]}], "}"}]}], "]"}], ";", 
                    RowBox[{"r", "=", "150"}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"exPath", "~~", 
                    RowBox[{"ToString", "[", "i", "]"}], "~~", "\<\" \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], 
                    "~~", "\<\" dpi\\\\\"\>", "~~", "nameID", 
                    "~~", "\<\" _ \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], "~~", "\<\" dpi\"\>",
                     "~~", "i"}], ",", 
                    RowBox[{"Rasterize", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"ImageResolution", "\[Rule]", "r"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", "\<\".png\"\>", "}"}]}], "}"}]}], "]"}], ";", 
                    RowBox[{"r", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"exPath", "~~", 
                    RowBox[{"ToString", "[", "i", "]"}], "~~", "\<\" \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], 
                    "~~", "\<\" dpi\\\\\"\>", "~~", "nameID", 
                    "~~", "\<\" _ \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], "~~", "\<\" dpi\"\>",
                     "~~", "i"}], ",", 
                    RowBox[{"Rasterize", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"ImageResolution", "\[Rule]", "r"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", "\<\".png\"\>", "}"}]}], "}"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"exPath", "~~", 
                    RowBox[{"ToString", "[", "i", "]"}], "~~", "\<\"\\\\\"\>",
                     "~~", "nameID", "~~", "i"}], ",", "g"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\".svg\"\>", ",", "\<\".eps\"\>", 
                    ",", "\<\".pdf\"\>"}], "}"}]}], "}"}]}], "]"}], "&"}], 
                    ")"}], "/@", "#1"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"myExportFigureList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "nameID"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"myExportFigureList", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"myExportFigureList", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"myExportFigureList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "nameID"}], "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"nameID", ",", "name", ",", "icon"}], "}"}]}]}], 
                    "]"}]}], ";"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"myExportFigureList", ",", 
                    RowBox[{"{", 
                    RowBox[{"nameID", ",", "name", ",", "icon"}], "}"}]}], 
                    "]"}]}], "]"}], ";"}], ")"}], "&"}], ")"}], "/@", "l"}], ";", 
                 RowBox[{"Export", "[", 
                  RowBox[{
                   RowBox[{
                   "exPath", 
                    "~~", "\<\"##1 full names of figure IDs.pdf\"\>"}], ",", 
                   RowBox[{"Column", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "\t", "\"\\t\"", "\"ID \"", "\"figure name\"", "\"\""},
                    "RowWithSeparators"], ",", 
                    
                    TemplateBox[{
                    "\t", "\"\\t\"", "\"___\"", "\"______\"", "\"\""},
                    "RowWithSeparators"]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", "\<\"\\t\"\>"}], 
                    "]"}], "]"}], "&"}], ")"}], "/@", 
                    "myExportFigureList"}]}], "]"}], "]"}]}], "]"}], ";", 
                 RowBox[{"Export", "[", 
                  RowBox[{
                   RowBox[{"exPath", "~~", "\<\"##2 figure IDs.rtf\"\>"}], ",", 
                   RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"myExportFigureList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    ",", "\<\"\\n\"\>"}], "]"}]}], "]"}], ";"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myExportF],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myExportFPNG", "[", "l_List", "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"r", ",", "g", ",", "name"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"name", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"r", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"exPath", "~~", "name", "~~", "\<\" \"\>", "~~", 
                    RowBox[{"ToString", "[", "r", "]"}], "~~", "\<\" dpi\"\>",
                     "~~", "i"}], ",", 
                    RowBox[{"Rasterize", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"ImageResolution", "\[Rule]", "r"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", "\<\".png\"\>", "}"}]}], "}"}]}], "]"}]}], 
                    ")"}], "&"}], ")"}], "/@", "l"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myExportFPNG],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myExportFSVG", "[", "l_List", "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"r", ",", "g", ",", "name"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"name", "=", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"exPath", "~~", "name", "~~", "i"}], ",", "g"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", "\<\".svg\"\>", "}"}]}], "}"}]}], "]"}], 
                    "&"}], ")"}], "/@", "#1"}]}], ")"}], "&"}], ")"}], "/@", 
                 "l"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myExportFSVG],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myFlatten", "[", 
               RowBox[{"l_List", ",", "level_Integer"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", "#1", "]"}], "&"}], ",", "l", ",", 
                  RowBox[{"{", "level", "}"}]}], "]"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myFlatten],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myFrameStyle", "[", 
               RowBox[{
                RowBox[{"fontsize_Integer", ":", "13"}], ",", 
                RowBox[{
                "fontfamily_String", ":", "\<\"Lucida Sans Unicode\"\>"}], ",", 
                RowBox[{"color_", ":", 
                 TemplateBox[<|"color" -> GrayLevel[0]|>,
                  "GrayLevelColorSwatchTemplate"]}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"FrameStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "fontsize"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "fontfamily"}], ",", 
                   "color"}], "]"}]}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myFrameStyle],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myFrameTickStyle", "[", 
               RowBox[{
                RowBox[{"fontsize_Integer", ":", "13"}], ",", 
                RowBox[{
                "fontfamily_String", ":", "\<\"Lucida Sans Unicode\"\>"}], ",", 
                RowBox[{"color_", ":", 
                 TemplateBox[<|"color" -> GrayLevel[0]|>,
                  "GrayLevelColorSwatchTemplate"]}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"FrameTicksStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "fontsize"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "fontfamily"}], ",", 
                   "color"}], "]"}]}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myFrameTickStyle],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myLabelStyle", "[", 
               RowBox[{
                RowBox[{"fontsize_Integer", ":", "13"}], ",", 
                RowBox[{
                "fontfamily_String", ":", "\<\"Lucida Sans Unicode\"\>"}], ",", 
                RowBox[{"color_", ":", 
                 TemplateBox[<|"color" -> GrayLevel[0]|>,
                  "GrayLevelColorSwatchTemplate"]}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "fontsize"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "fontfamily"}], ",", 
                   "color"}], "]"}]}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myLabelStyle],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myLegendAppearance", "[", 
               RowBox[{
                RowBox[{"markersize_Integer", ":", "13"}], ",", 
                RowBox[{
                "fontfamily_String", ":", "\<\"Lucida Sans Unicode\"\>"}], ",", 
                RowBox[{"color_", ":", 
                 TemplateBox[<|"color" -> GrayLevel[0]|>,
                  "GrayLevelColorSwatchTemplate"]}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"LegendAppearance", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"LegendMarkerSize", "\[Rule]", "markersize"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "fontfamily"}], ",", 
                   "color"}], "}"}]}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myLegendAppearance],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myPackageInputPrint", "[", "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "l", "}"}], ",", 
                RowBox[{
                 RowBox[{"l", "=", 
                  RowBox[{"ToExpression", "/@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Names", "[", "\<\"Global`*\"\>", "]"}], ",", 
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{"\<\"my\"\>", "~~", "__"}], "]"}]}], "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"\<\"myExportFunctionList\"\>", "\[Rule]", 
                    "Nothing"}], ",", 
                    
                    RowBox[{"\<\"myExportFigureList\"\>", "\[Rule]", 
                    "Nothing"}], ",", 
                    
                    RowBox[{"\<\"myExportEquationList\"\>", "\[Rule]", 
                    "Nothing"}], ",", 
                    RowBox[{"\<\"myFontSize\"\>", "\[Rule]", "Nothing"}], ",", 
                    RowBox[{"\<\"myFontStandard\"\>", "\[Rule]", "Nothing"}], 
                    ",", 
                    RowBox[{"\<\"myColors\"\>", "\[Rule]", "Nothing"}], ",", 
                    RowBox[{"\<\"myFigureIDs\"\>", "\[Rule]", "Nothing"}], ",", 
                    
                    RowBox[{"\<\"myColorForGradient\"\>", "\[Rule]", 
                    "Nothing"}], ",", 
                    RowBox[{"\<\"myPlotColors\"\>", "\[Rule]", "Nothing"}]}], 
                    "}"}]}], ")"}]}]}], ";", 
                 RowBox[{"\<\"TableForm\"\>", "[", 
                  RowBox[{"\<\"Definition\"\>", "/@", "l"}], "]"}]}]}], 
               "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myPackageInputPrint],
       Editable->False]},
     {
      InterpretationBox["\<\"\"\>",
       Definition[$CellContext`mypart$],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myPlotSequence", "[", "]"}], ":=", 
              RowBox[{"Sequence", "[", 
               RowBox[{
                RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"myFrameStyle", "[", "]"}], ",", 
                RowBox[{"myFrameTickStyle", "[", "]"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myPlotSequence],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myPlotStyle", "[", 
               RowBox[{
                RowBox[{"opacity_", ":", "1"}], ",", 
                RowBox[{"colorList_List", ":", "myPlotColors"}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "opacity", "]"}], ",", "#1"}], 
                    "]"}], "&"}], ")"}], "/@", "colorList"}]}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myPlotStyle],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myPureColors", "[", "]"}], ":=", 
              RowBox[{"{", 
               RowBox[{
               "Red", ",", "Blue", ",", "Green", ",", "Orange", ",", "Cyan", ",",
                 "Magenta", ",", "Yellow", ",", "Black"}], "}"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myPureColors],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myReplaceList", "[", 
               RowBox[{"lTarget_List", ",", "fReplace_"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#1", "\[Rule]", "fReplace"}], "&"}], ")"}], "/@", 
                 "lTarget"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myReplaceList],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myStringJoin", "[", 
               RowBox[{"l_List", ",", 
                RowBox[{"deli_String", ":", "\<\"\"\>"}], ",", 
                RowBox[{"start_Integer", ":", "2"}], ",", 
                RowBox[{"end_Integer", ":", 
                 RowBox[{"-", "2"}]}], ",", 
                RowBox[{"step_Integer", ":", "2"}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"Riffle", "[", 
                  RowBox[{
                   RowBox[{"ToString", "/@", "l"}], ",", "deli", ",", 
                   RowBox[{"{", 
                    RowBox[{"start", ",", "end", ",", "step"}], "}"}]}], 
                  "]"}], "]"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myStringJoin],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myStringSplit", "[", 
               RowBox[{"s_String", ",", "deli_List"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "out", ",", "j"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ";", 
                 RowBox[{"out", "=", 
                  RowBox[{"StringSplit", "[", 
                   RowBox[{"s", ",", 
                    RowBox[{
                    "deli", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"j", "=", "1"}], ",", 
                   RowBox[{"j", "<", 
                    RowBox[{"Length", "[", "deli", "]"}]}], ",", 
                   RowBox[{"j", "++"}], ",", 
                   RowBox[{
                    RowBox[{"i", "++"}], ";", 
                    RowBox[{"out", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "deli", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], ",", "out", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", "-", "1"}], "}"}]}], "]"}]}]}]}], "]"}], ";",
                  "out"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myStringSplit],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myStyle", "[", 
               RowBox[{"s_", ",", 
                RowBox[{"fontsize_Integer", ":", "13"}], ",", 
                RowBox[{
                "fontfamily_String", ":", "\<\"Lucida Sans Unicode\"\>"}], ",", 
                RowBox[{"color_", ":", 
                 TemplateBox[<|"color" -> GrayLevel[0]|>,
                  "GrayLevelColorSwatchTemplate"]}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"StringQ", "[", "s", "]"}], ",", "s", ",", 
                    RowBox[{"ToString", "[", "s", "]"}]}], "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "fontsize"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "fontfamily"}], ",", 
                  "color"}], "]"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myStyle],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"mySubJoin", "[", 
               RowBox[{"lTarget_List", ",", "lInsert_List", ",", 
                RowBox[{"pos_Integer", ":", "1"}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Insert", "[", 
                    RowBox[{
                    RowBox[{"lTarget", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "pos"}], "]"}], "&"}], 
                  ")"}], "/@", "lInsert"}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`mySubJoin],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myT", "[", 
               RowBox[{"l1_List", ",", "l2_List"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                TemplateBox[{
                  RowBox[{"{", 
                    RowBox[{"l1", ",", "l2"}], "}"}]},
                 "Transpose"]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myT],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myTake", "[", 
               RowBox[{"lData_List", ",", "lSort_List"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"outList", ",", "dimensionQ"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", "lData", "]"}], "]"}], ">", 
                    "1"}], ",", 
                   RowBox[{"dimensionQ", "=", "True"}], ",", 
                   RowBox[{"dimensionQ", "=", "False"}]}], "]"}], ";", 
                 RowBox[{"outList", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"dimensionQ", "===", "True"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#1", "]"}], "===", "Span"}], ",", 
                    RowBox[{"lData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "#1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "#1"}], "\[RightDoubleBracket]"}], 
                    "}"}]}], "]"}], "&"}], ")"}], "/@", "lSort"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#1", "]"}], "===", "Span"}], ",", 
                    RowBox[{
                    "lData", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "lData", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "}"}]}], "]"}], "&"}], ")"}], "/@",
                     "lSort"}]}], "]"}]}], ";", 
                 RowBox[{"outList", "=", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], ">", "1"}], ",", 
                    TemplateBox[{"#1"},
                    "Transpose"], ",", "#1"}], "]"}], "&"}], ")"}], "/@", 
                   "outList"}]}], ";", 
                 RowBox[{"outList", "=", 
                  TemplateBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"outList", ",", "1"}], "]"}]},
                   "Transpose"]}]}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myTake],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myTickStyle", "[", 
               RowBox[{
                RowBox[{"fontsize_Integer", ":", "13"}], ",", 
                RowBox[{
                "fontfamily_String", ":", "\<\"Lucida Sans Unicode\"\>"}], ",", 
                RowBox[{"color_", ":", 
                 TemplateBox[<|"color" -> GrayLevel[0]|>,
                  "GrayLevelColorSwatchTemplate"]}]}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"TicksStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "fontsize"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "fontfamily"}], ",", 
                   "color"}], "]"}]}]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myTickStyle],
       Editable->False]},
     {
      InterpretationBox[GridBox[{
         {GridBox[{
            {
             RowBox[{
              RowBox[{"myTranspose", "[", 
               RowBox[{"lLong_List", ",", "lShort_List"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                TemplateBox[{
                  RowBox[{"{", 
                    RowBox[{"lLong", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"lShort", ",", 
                    RowBox[{"Length", "[", "lLong", "]"}]}], "]"}]}], "}"}]},
                 "Transpose"]}], "]"}]}]}
           },
           BaselinePosition->{Baseline, {1, 1}},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{
                Scaled[0.999]}}, "Rows" -> {{1.}}}]}
        },
        BaselinePosition->{Baseline, {1, 1}},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
       Definition[$CellContext`myTranspose],
       Editable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9588059130591755`*^9, 3.9589715029704323`*^9, 3.9589833826856136`*^9, 
   3.9592591998908825`*^9, {3.959266359852186*^9, 3.9592663727419815`*^9}, 
   3.959266435790457*^9, 3.9592667410043488`*^9, 3.959266771774885*^9, 
   3.960992916851259*^9},
 CellLabel->
  "Out[28]//TableForm=",ExpressionUUID->"39a68750-60cf-b247-8db3-\
4904277cb897"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["myFigureIDs", "Section",
 CellChangeTimes->{{3.9523328095680523`*^9, 
  3.9523328134640102`*^9}},ExpressionUUID->"873ede2e-4f52-2942-85e4-\
42f6ae7b5c04"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IntegerString", "[", 
    RowBox[{"#", ",", "10", ",", "3"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "50", "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "make", " ", "the", " ", "next", " ", "output", " ", "cell", " ", "to", " ",
      "an", " ", "input", " ", "cell", " ", "with", " ", "the", " ", 
     "variable", " ", 
     StyleBox["myFigureIDs",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], "myFigureIDs"}], "="}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9465492772279587`*^9, 3.946549350820772*^9}, {
  3.9523328335084953`*^9, 3.952332833761711*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"ed486aad-c799-5a45-9e29-12981665215d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myFigureIDs", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<001\>\"", ",", "\"\<002\>\"", ",", "\"\<003\>\"", 
     ",", "\"\<004\>\"", ",", "\"\<005\>\"", ",", "\"\<006\>\"", 
     ",", "\"\<007\>\"", ",", "\"\<008\>\"", ",", "\"\<009\>\"", 
     ",", "\"\<010\>\"", ",", "\"\<011\>\"", ",", "\"\<012\>\"", 
     ",", "\"\<013\>\"", ",", "\"\<014\>\"", ",", "\"\<015\>\"", 
     ",", "\"\<016\>\"", ",", "\"\<017\>\"", ",", "\"\<018\>\"", 
     ",", "\"\<019\>\"", ",", "\"\<020\>\"", ",", "\"\<021\>\"", 
     ",", "\"\<022\>\"", ",", "\"\<023\>\"", ",", "\"\<024\>\"", 
     ",", "\"\<025\>\"", ",", "\"\<026\>\"", ",", "\"\<027\>\"", 
     ",", "\"\<028\>\"", ",", "\"\<029\>\"", ",", "\"\<030\>\"", 
     ",", "\"\<031\>\"", ",", "\"\<032\>\"", ",", "\"\<033\>\"", 
     ",", "\"\<034\>\"", ",", "\"\<035\>\"", ",", "\"\<036\>\"", 
     ",", "\"\<037\>\"", ",", "\"\<038\>\"", ",", "\"\<039\>\"", 
     ",", "\"\<040\>\"", ",", "\"\<041\>\"", ",", "\"\<042\>\"", 
     ",", "\"\<043\>\"", ",", "\"\<044\>\"", ",", "\"\<045\>\"", 
     ",", "\"\<046\>\"", ",", "\"\<047\>\"", ",", "\"\<048\>\"", 
     ",", "\"\<049\>\"", ",", "\"\<050\>\""}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9588059558491516`*^9, 3.9588059600132313`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2f09e95e-ad70-6249-a099-12ecf0a99b96"]
}, Closed]],

Cell[CellGroupData[{

Cell["data import", "Section",
 CellChangeTimes->{{3.9523328095680523`*^9, 3.9523328134640102`*^9}, {
  3.95880610578055*^9, 
  3.9588061092461452`*^9}},ExpressionUUID->"33ef52ee-0b32-644b-9301-\
4178678177d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "urlHead", 
   "=", "\"\<https://raw.githubusercontent.com/Carl-Firle/effects-of-mask-\
wearing-on-human-particle-formation/refs/heads/main/raw-data/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "urlHead", " ", 
      "~~", "\"\<2025-06-06/first-test-air-cleaner/11-D_2025-06-06-C.dat\>\""}\
], ",", "\"\<Text\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"myStringSplit", "[", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"d", ",", 
       RowBox[{"\"\<,\>\"", "->", "\"\<.\>\""}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\\n\>\"", ",", "\"\<\\t\>\""}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"[", 
     RowBox[{"16", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FromDateString", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}], "]"}], "&"}], 
    "/@", 
    RowBox[{"d", "[", 
     RowBox[{"[", 
      RowBox[{"16", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9588065786646843`*^9, 3.958806583441965*^9}, 
   3.95880663802256*^9, {3.958806994393709*^9, 3.958806995275572*^9}, {
   3.958973088529316*^9, 3.9589730901887264`*^9}, {3.958973172087969*^9, 
   3.958973180640152*^9}, {3.9589733768269463`*^9, 3.9589733778574066`*^9}, {
   3.958981055348648*^9, 3.958981078511919*^9}, {3.958981133158169*^9, 
   3.9589811333443546`*^9}, {3.958981256428705*^9, 3.95898128654982*^9}, {
   3.9589813806214466`*^9, 3.9589813890026875`*^9}, {3.9589814541078167`*^9, 
   3.958981546351763*^9}, {3.9589816145837173`*^9, 3.9589816156533337`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"fc96e137-97ba-b245-9af5-11cfed18a211"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dProtocol", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "urlHead", " ", 
     "~~", "\"\<2025-06-06/first-test-air-cleaner/%23testdata_protocol.txt\>\"\
"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9588065786646843`*^9, 3.958806583441965*^9}, 
   3.95880663802256*^9, {3.958806994393709*^9, 3.958806995275572*^9}, {
   3.9588080391501274`*^9, 3.9588080394951*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"45a694e2-47c0-434c-a370-4c945930407a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"protocol", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "->", 
      RowBox[{"Quantity", "[", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], 
        ",", "\"\<Milliseconds\>\""}], "]"}]}], "&"}], "/@", 
    RowBox[{"myStringSplit", "[", 
     RowBox[{"dProtocol", ",", 
      RowBox[{"{", 
       RowBox[{"\"\< --- \>\"", ",", "\"\< :: \>\""}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"protocol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "->", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"Min", "[", 
       RowBox[{"Values", "@", "protocol"}], "]"}]}]}], "&"}], "/@", 
   "protocol"}]}]}], "Input",
 CellChangeTimes->{{3.9588066649779186`*^9, 3.9588068516201954`*^9}, {
  3.958806892620428*^9, 3.958806923151636*^9}, {3.9588070483898716`*^9, 
  3.9588070638565197`*^9}, {3.958807095142559*^9, 3.9588070960923786`*^9}, {
  3.9588071270032578`*^9, 3.958807129296688*^9}, {3.95880792893725*^9, 
  3.958807937288519*^9}, {3.9588085856898346`*^9, 3.958808590623682*^9}, {
  3.958808742193434*^9, 3.958808756727932*^9}, {3.958808894503145*^9, 
  3.9588089249437103`*^9}, {3.958809061938261*^9, 3.958809124909258*^9}, {
  3.9589716959364433`*^9, 3.9589717054891624`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"0f38f304-3b30-2646-a213-41def8671f28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"start time***Fri Jun 13 2025 14:58:41 GMT+0200 (Mitteleurop\
\[ADoubleDot]ische Sommerzeit)\"\>", "\[Rule]", 
    TemplateBox[{"0", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"airCleaner_Airlock_start\"\>", "\[Rule]", 
    TemplateBox[{"1236671", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"airCleaner_cabin_start\"\>", "\[Rule]", 
    TemplateBox[{"1237464", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"roomAirCondition_start\"\>", "\[Rule]", 
    TemplateBox[{"1237656", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_01_start\"\>", "\[Rule]", 
    TemplateBox[{"1238008", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_02_start\"\>", "\[Rule]", 
    TemplateBox[{"1238320", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_03_start\"\>", "\[Rule]", 
    TemplateBox[{"1238510", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_01_start\"\>", "\[Rule]", 
    TemplateBox[{"1241399", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"mask_order***surgical mask,30, ,FFP2 mask,50, ,none,30, ,FFP2 \
mask,30, ,surgical mask,50, ,none,50, \"\>", "\[Rule]", 
    TemplateBox[{"1249924", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"randomise_start\"\>", "\[Rule]", 
    TemplateBox[{"1249924", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"mask_type***surgical mask***-\"\>", "\[Rule]", 
    TemplateBox[{"1250390", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"target_respMinVol***30***l/min\"\>", "\[Rule]", 
    TemplateBox[{"1250599", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"measurement_start***surgical mask***30\"\>", "\[Rule]", 
    TemplateBox[{"1250774", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_airlock_open\"\>", "\[Rule]", 
    TemplateBox[{"1250937", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_airlock_closed\"\>", "\[Rule]", 
    TemplateBox[{"1251096", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_cabin_open\"\>", "\[Rule]", 
    TemplateBox[{"1251301", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"subject_in_position\"\>", "\[Rule]", 
    TemplateBox[{"1251476", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_cabin_closed\"\>", "\[Rule]", 
    TemplateBox[{"1251865", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_airlock_open\"\>", "\[Rule]", 
    TemplateBox[{"1252074", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_airlock_closed\"\>", "\[Rule]", 
    TemplateBox[{"1252278", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"airCleaner_cabin_end\"\>", "\[Rule]", 
    TemplateBox[{"1252455", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_total***50\"\>", "\[Rule]", 
    TemplateBox[{"1252763", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_start***50***Watt\"\>", "\[Rule]", 
    TemplateBox[{"1252763", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_total***75\"\>", "\[Rule]", 
    TemplateBox[{"1253036", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_increase***25***Watt\"\>", "\[Rule]", 
    TemplateBox[{"1253036", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_total***100\"\>", "\[Rule]", 
    TemplateBox[{"1253223", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_increase***25***Watt\"\>", "\[Rule]", 
    TemplateBox[{"1253223", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"countdown_start***.1***min\"\>", "\[Rule]", 
    TemplateBox[{"1260952", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"pexa_start\"\>", "\[Rule]", 
    TemplateBox[{"1264895", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"pexa_sample_start\"\>", "\[Rule]", 
    TemplateBox[{"1265341", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"pexa_sample_end\"\>", "\[Rule]", 
    TemplateBox[{"1265660", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_total***75\"\>", "\[Rule]", 
    TemplateBox[{"1266229", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_decrease***25***Watt\"\>", "\[Rule]", 
    TemplateBox[{"1266229", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_total***50\"\>", "\[Rule]", 
    TemplateBox[{"1266409", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_decrease***25***Watt\"\>", "\[Rule]", 
    TemplateBox[{"1266410", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_total***25\"\>", "\[Rule]", 
    TemplateBox[{"1266812", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"load_decrease***25***Watt\"\>", "\[Rule]", 
    TemplateBox[{"1266812", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"exercise_end\"\>", "\[Rule]", 
    TemplateBox[{"1266989", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"pexa_end\"\>", "\[Rule]", 
    TemplateBox[{"1267882", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"measurement_end\"\>", "\[Rule]", 
    TemplateBox[{"1268253", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_cabin_exit_open\"\>", "\[Rule]", 
    TemplateBox[{"1268469", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"subject_exits\"\>", "\[Rule]", 
    TemplateBox[{"1268668", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"airCleaner_airlock_end\"\>", "\[Rule]", 
    TemplateBox[{"1269055", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_airlock_open\"\>", "\[Rule]", 
    TemplateBox[{"1269404", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_cabin_open\"\>", "\[Rule]", 
    TemplateBox[{"1269694", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"window_opening\"\>", "\[Rule]", 
    TemplateBox[{"1269893", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"window_closing\"\>", "\[Rule]", 
    TemplateBox[{"1270091", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_cabin_closed\"\>", "\[Rule]", 
    TemplateBox[{"1270270", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_airlock_closed\"\>", "\[Rule]", 
    TemplateBox[{"1270440", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_cabin_exit_closed\"\>", "\[Rule]", 
    TemplateBox[{"1270627", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"airCleaner_Airlock_start\"\>", "\[Rule]", 
    TemplateBox[{"1270833", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"airCleaner_cabin_start\"\>", "\[Rule]", 
    TemplateBox[{"1271087", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"next_measurement\"\>", "\[Rule]", 
    TemplateBox[{"1271400", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"door_cabin_exit_open\"\>", "\[Rule]", 
    TemplateBox[{"1275976", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"subject_exits\"\>", "\[Rule]", 
    TemplateBox[{"1276123", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"airCleaner_Airlock_end\"\>", "\[Rule]", 
    TemplateBox[{"1276304", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"roomAirCondition_end\"\>", "\[Rule]", 
    TemplateBox[{"1276479", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_01_end\"\>", "\[Rule]", 
    TemplateBox[{"1276642", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_02_end\"\>", "\[Rule]", 
    TemplateBox[{"1277002", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_03_end\"\>", "\[Rule]", 
    TemplateBox[{"1277359", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_01_name***11f\"\>", "\[Rule]", 
    TemplateBox[{"1288599", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_02_name***\"\>", "\[Rule]", 
    TemplateBox[{"1288599", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AS_03_name***\"\>", "\[Rule]", 
    TemplateBox[{"1288599", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"yearOfBirth***1955\"\>", "\[Rule]", 
    TemplateBox[{"1288599", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"gender***female\"\>", "\[Rule]", 
    TemplateBox[{"1288599", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"height***\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"weight***\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"healthy***1\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"fever***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"illness***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"surgeries***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"cardiovascular***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"infarction***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"aneurysma***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"pneumothorax***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"dizziness***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"respDisease***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"acuteRespDisease***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"allergies***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"nicotineAbuse***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"medication***0\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"auscultationHeart***distinct &amp; clear sounds, regular \
rhythm, normal heart rate, no abnormal sounds\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"heartRate***\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"rhythm***SA node\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"cardiacAxis***normal\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"heartBlock***none\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"rWave***regular R-wave progression\"\>", "\[Rule]", 
    TemplateBox[{"1288600", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"repolarisation***none\"\>", "\[Rule]", 
    TemplateBox[{"1288601", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"auscultationLung***vesicular sound, normopnoea, no \
pathological breath sound\"\>", "\[Rule]", 
    TemplateBox[{"1288601", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"end of protocol\"\>", "\[Rule]", 
    TemplateBox[{"1288601", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9588079385931625`*^9, 3.9588080467798824`*^9, 
  3.958808458869892*^9, 3.958808591202198*^9, 3.9588087570981255`*^9, 
  3.958808927004595*^9, 3.958809075207199*^9, 3.9588091262750626`*^9, 
  3.9589715536192093`*^9, 3.9589717063624077`*^9, 3.9592592072329197`*^9, 
  3.9609932412065506`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"93891dad-1cab-e741-9f28-cc17b7d6baa7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<AS_01_end\>\"", "/.", "protocol"}]], "Input",
 CellChangeTimes->{{3.958971954943964*^9, 3.958971961819792*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"80f11709-1104-6d49-a539-0d5881e2e78a"],

Cell[BoxData[
 TemplateBox[{"1276642", "\"ms\"", "milliseconds", "\"Milliseconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9589719622412415`*^9, 3.9592592087221336`*^9, 
  3.9609932539265347`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"5fde2e64-8dfa-d945-b495-53f0a1e06d2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"tab", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "\"\<time\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.95925922341971*^9, 3.959259225721573*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e0cd4d19-bd19-804a-ae6c-50409b2ba3f5"],

Cell[BoxData[
 TemplateBox[{"1276.5`", "\"s\"", "seconds", "\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.959259218089657*^9, 3.959259226388689*^9}, {
  3.9609932553851814`*^9, 3.9609932788539066`*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"d2a8447f-754c-f247-892f-2bb888e8f487"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tab", "[", 
    RowBox[{"All", ",", "\"\<time\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "5"}], ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}], "//", "InputForm"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", " ", 
  RowBox[{"(", 
   RowBox[{"Head", "->", "List"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.960993287316103*^9, 3.9609934633840733`*^9}, {
  3.96099350841041*^9, 3.9609937215042877`*^9}, {3.960993776463167*^9, 
  3.960993793760927*^9}, {3.9609939462443447`*^9, 3.9609940997707024`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"d83f6c40-ad9d-3d47-abdb-d3867b4d3cf4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TabularColumn",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Element type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\"Quantity\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "\"Seconds\""}], "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Length: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Element type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\"Quantity\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "\"Seconds\""}], "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Length: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MissingCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TabularColumn[<|
   "Data" -> {4, {{{1252.5, 1258.5, 1264.5, 1270.5}, {}, None}}, None}, 
    "ElementType" -> TypeSpecifier["Quantity"]["Real64", "Seconds"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.960993293881935*^9, 3.9609933533170586`*^9}, {
   3.9609933911842785`*^9, 3.9609934343345165`*^9}, {3.9609935050319767`*^9, 
   3.9609935744220676`*^9}, {3.9609936052065563`*^9, 3.960993691794153*^9}, 
   3.960993722500128*^9, {3.9609937779408665`*^9, 3.960993794432394*^9}, {
   3.9609939507769375`*^9, 3.9609941002605686`*^9}},
 CellLabel->
  "Out[157]=",ExpressionUUID->"458f2309-e2d4-e442-8ace-1954b3b8f099"],

Cell["\<\
TabularColumn[<|\"Data\" -> {4, {{{1252.5, 1258.5, 1264.5, 1270.5}, {}, \
None}}, None}, 
  \"ElementType\" -> TypeSpecifier[\"Quantity\"][\"Real64\", \"Seconds\"]|>]\
\>", "Output",
 CellChangeTimes->{{3.960993293881935*^9, 3.9609933533170586`*^9}, {
   3.9609933911842785`*^9, 3.9609934343345165`*^9}, {3.9609935050319767`*^9, 
   3.9609935744220676`*^9}, {3.9609936052065563`*^9, 3.960993691794153*^9}, 
   3.960993722500128*^9, {3.9609937779408665`*^9, 3.960993794432394*^9}, {
   3.9609939507769375`*^9, 
   3.9609941002655716`*^9}},ExpressionUUID->"74c947b3-e3c5-e64a-bc80-\
cb7592b54950"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tab", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "\"\<time\>\""}], "]"}], "]"}], " ", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"5ec8b010-2ae4-2944-ac16-284a6b024f28"],

Cell[BoxData[
 TemplateBox[{"1276.5`", "\"s\"", "seconds", "\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9592592376626167`*^9, 3.9609932808617992`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"76e0be6a-50b9-1440-9e54-ba04d96529fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{"ToTabular", "[", 
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{"16", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "\"\<Rows\>\"", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<ColumnKeys\>\"", "->", 
        RowBox[{"d", "[", 
         RowBox[{"[", "15", "]"}], "]"}]}], " ", "/.", " ", 
       RowBox[{"\"\<[d&t31.12.2035 11:50:55]\>\"", " ", "->", 
        " ", "\"\<time\>\""}]}], "|>"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{"CastColumns", "[", 
    RowBox[{"%", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"\"\<Quantity\>\"", "::[", 
         RowBox[{"\"\<Real64\>\"", ",", "\"\<Micrometers\>\""}], "]"}]}], 
       "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"sizeRange", "=", 
        RowBox[{"d", "[", 
         RowBox[{"[", 
          RowBox[{"15", ",", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ")"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"tab", "=", 
  RowBox[{"TransformColumns", "[", 
   RowBox[{"tab", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", "->", 
      RowBox[{"Function", "[", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"#time", "-", 
          RowBox[{"Max", "[", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<time\>\""}], "]"}], "]"}], "]"}], "+", 
          RowBox[{"UnitConvert", "[", 
           RowBox[{
            RowBox[{"\"\<AS_01_end\>\"", "/.", " ", "protocol"}], 
            ",", "\"\<Seconds\>\""}], "]"}]}], ",", ".5"}], "]"}], "]"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.95897229314032*^9, 3.958972297917446*^9}, {
   3.958972677536791*^9, 3.958972730676588*^9}, {3.9589727866305656`*^9, 
   3.9589728543894596`*^9}, {3.9589734328553104`*^9, 3.958973448912819*^9}, {
   3.958973555736418*^9, 3.9589735830501404`*^9}, {3.958973747084152*^9, 
   3.9589737556937923`*^9}, {3.9589806050351353`*^9, 3.95898063090637*^9}, {
   3.958980682455616*^9, 3.9589808091485443`*^9}, {3.958980875701769*^9, 
   3.9589809039689445`*^9}, {3.958980952021002*^9, 3.958981007214794*^9}, {
   3.958981636841219*^9, 3.958981666894491*^9}, 3.958981761482567*^9, 
   3.958981816097639*^9, {3.9589819546166954`*^9, 3.9589819556658897`*^9}, {
   3.9589820478358746`*^9, 3.958982072604067*^9}, {3.9589841060915947`*^9, 
   3.958984128924692*^9}, {3.95898544800766*^9, 3.9589854567094917`*^9}, {
   3.9592592748582306`*^9, 3.9592592854997196`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2eb82eef-1642-744d-9fc6-2fcc4fd70b30"],

Cell[BoxData[
 TemplateBox[<|
  "Summary" -> 
   TemplateBox[<|
     "RowCount" -> 213, "ColumnCount" -> 32, "ColumnTypes" -> Grid[{{"time", 
          TypeSpecifier["Quantity"]["Real64", "Seconds"]}, {"0.253 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.298 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.352 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.414 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.488 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.576 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.679 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.800 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.943 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.112 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.310 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.545 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.821 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.146 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.530 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.982 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"3.515 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"4.144 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"4.884 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"5.757 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"6.787 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"8.000 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"9.430 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"11.12 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"13.10 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"15.45 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"18.21 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"21.46 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"25.30 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"29.82 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"35.15 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}}, Alignment -> 
        Left], "Backend" -> "Tabular`Backend`WolframKernel", "UUID" -> 
      "Tabular-99d32feb-1318-4031-88e9-4e5e8b70429c", "Form" -> StandardForm, 
      "Interpretable" -> True|>, "TabularSummary", 
     BaseStyle -> (DynamicUpdating -> True)], "Main" -> TableViewBox[
     Tabular[<|
      "RawSchema" -> <|
        "ColumnProperties" -> <|
          "time" -> <|
            "ElementType" -> TypeSpecifier["Quantity"]["Real64", "Seconds"]|>,
            "0.253 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.298 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.352 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.414 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.488 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.576 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.679 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.800 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.943 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.112 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.310 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.545 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.821 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "2.146 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "2.530 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "2.982 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "3.515 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "4.144 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "4.884 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "5.757 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "6.787 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "8.000 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "9.430 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "11.12 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "13.10 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "15.45 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "18.21 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "21.46 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "25.30 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "29.82 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "35.15 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>|>, 
         "KeyColumns" -> None, "Backend" -> "WolframKernel"|>, 
       "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJw1zztoU2EYBuBYMhycpJzJSSVCcJIiDuIQpWAICLUWxaKoMdVaL9V6vMVb
rVFrvcU0k5NIBukomRxLhoOTyHHpKBmCY8nk5PA//svDx8vLy7+zOj85syWX
y/3K/X+jpeDu4OJe7ufBYOkQx3mEFR4N7pgIfjrmPu6ecp9wn3Sfck+7T7vP
uM8GJ84Ft50P/mCzKr8gr8nZnJFflF+Sszkrvyyfk7N5RX5Vfk3O5nX5fDC6
EZxlyuLN4DIHLC8EvzC6pc+UxUSfA5Zv6zO6o8+Uxbv6HLB8T5/RfX2mLNb1
OWD5gT6jh/pMWXykzwHLj/UZPdFnyngxOM6EHWbMPw3uY41t9jhkYSk4xQa7
7DN+Zp8JO8yYb9hnjW32OGThuX022GWf8Qv7TNhhxvxL+6yxzR6HLCzbZ4Nd
9hm/ss+EHWbMr9hnjW32OGThtX022GWf8Rv7TNhhxvxb+6yxzR6HLLyzzwa7
7DN+b58JO8w40gxu5xgrrLLOFte4zg1ucuuH4C4e4CTnuMSP/Mrv/M2/HG0F
9/Awp7nAFX7mN/7kH46s+j/HWGGVdba4xnVucHO19A8gcAFr
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Seconds"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJyVlL1LA0EQxVexsLNRECvTWUkKO5uzEQIWYqVWElA8EBJOLQ6EoERQCZgo
fhQWKiiiIgRTKFisJjZWNloHbfwjLBTnzcLMZQun+TG7b97M3d5eKpubmG0z
xrwZRFcj+GMJXATnnogDyA+RV8EX8BvsqRM/kY+gbuFRchC6MfASuhh5O+qH
n4nvNhBzftRlvz6woOYaAisNuc7zcZ8U5uLnfkU+eg/dA/zApTvizC1xukbs
rBJLyJtnxO4bYvGaeHFOnLySeS/09pTYcYz9feLXETF9Av89Yv6AuLGL/Yqk
3SHOl4nBNtFsgrHcT69KHec+2jXoC/ALMd+yzPtXJF2fnNRxzvU2wj7CZgNB
rjMZue76T4Gx9Nc+TL3Pvs5HhdZ56zjX4fF1oX1Vne7n3idHKHU+n8S8odLx
HJHSg+5987quZ1/Vz3cOOvS6T6fnSlDNkTivf9brfd936c5FnXdiXTOUdO8p
Uv04Mq33E/eBQ/Vz3z+fs+o/XpR69uX73FxvXe/uO/4T/B9wfrif5S1Z/+v3
AwX30as=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJylVLtKBFEMjZ2VlYWldpYWVlbTbidis5YLFoKwMiAoCMKi+GALRUUFnyDo
+twFP2ALCwsLG633MywFczKQM4QrmuaQ5OQkuTP3jtTqU7N9IvIhsKvb7AfH
7xVfHhQzxNeuFefvFD/bis1HxXfE+zu+3uJH0LU+Sy3FmWfFUehMP/l6qxPw
B9D3teV5Ex1fb3NbveVt/hw6g9Bp3/h5LX6C+DB0vi6hf674dqE4uQ+dU8x3
jD3PFIcOFBcOFXvwN/egu6u4s604Br/bQN0G5mgqyhZ01hFf8XxZ9n6Rr2H+
Va8rc55nvvFML6t7nW5O/CDPPDPjSTXACqFZ1fcp+WwVygd6Yb/ImJeYt8AU
/7cW1VGf0rkEfUs8Phez6DtGc0R7pvbnfKT31+/233Pn/4rzCQvPm33eP/j/
2ew+Ruce3Yfi/nI+tS+9A8WcuY+XdG1+rse701vMvgFBbaSK
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygAFUxY6oNA/oPSGuRA6YwGEPjETQgdMgdAMUH7HYlT1
Z6DqDaDmOMxHNR8mXzEPQrNA+QpzUPkw/RJTUdU/mIrqzphFqPph9sHUw8Qj
ZqO6Gyb/ZjGqP2DqYPYo9EDlJ6OKT+iC0AXtqOp+TIS6fyKqvEM/VH8rhA5o
gbqnE82cGlTaoR6qrxSVPlCEKg/jw+QZMtH4kVD1+ag0TJzBE1UfHHiiysPt
T0LTj2YOXB6HOTjF0c1DB2jq4fbgMpcQH5e7cNmLDnC5k5A5hOwj1R3EyhMZ
rhjpApc6Uv2DSx2h+MLlHlLNIdY9xMqjqyOUzsk1n9qA2HyHyx9o6mD5ECM/
opUb8HIHBtDtRSungPoBrBuCaA==
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygAFAVMcwLRDP4Te0AuhDSZC6I7JEPoHlJ8xAUIfmISq
/geaehgNM/fETFRzYeZYzIDQElNRzXnQit1cGB9Gw9yBrg/mrgldqPbC7IOZ
B3MXzJ0wGqa+oB3VHIZKVHtgdEALVD4Tqr8R6r4mVH1w8SJUcYd8qHmlUH49
VB4GIqH6klDVwc2JRLUfXT2MRpfHZT5cHkZ7oqonqI6QuCcBGt0eTwesfAyA
S5xUefTwIaQfl3p6AVzhSK67CIUvoXAkZA656qiln1L7YIBa8U7IHHLTO6mA
QH4k6A5C5Qqh9IMpDwCu5nM6
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygAFBo0OYNohH0Ir1EBohkoIHdAC5WeiqnOoh9APStH0
ZaLqh9EHilDlDzShqYOKw9xzIAnVfJh+GB+mDt18mLtg5sPcVdCOqh/mD7j5
UPsYOlH56PbC3Z+Eag46H0YzeELpSOw03N5IHPpgNBTA1aMDHOox5GEA5g50
cXT34gKE7CMWQPUT9BeJ5g1bQG//kWsfsfoGKr7IdR+t3Ettc4ktB4jNx9QO
B0LlDoIPAOOKTJw=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADkQ4QOhOVflAKoR3yscsfSHJgQAYw/oEiVHlc+mHm
w/gwdXBzkrDLY6grws43aES1B5d7MOzzhNKRaHQmGt8Tu3vg+tEBunno9qAD
TzR16Obgkiekn96AkP2E3D8KRsFQBPRKv4Mln6MD6rkHAFCXNsA=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADmQ4MKADG93TAzo9EUx+JKn6gCLv6A0kExDPR+DDg
icZHsw/DPQTMh9O49KP7JwkHn5C70AEuezzRaBggVpyQObgAseqoDXDZO1Du
GWgwUv09CkYBPoAozwD9DCbM
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoAOIh0whJDFDyThl8fge+JQDxPPRJOH8T3RaDTz4e5A
t4cQjW4/sYBY9dRSR2t5QoBS/aNgFIyCwQMGKj/jKn9hAFd9g2kOABysFgI=

                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoAGDiQ5QBieUDoSjQ8DhPjoAN0cXOaiq4/EIU/IfBw0
3H84zIXL4wIEzMepnlRAqnnk2jPQYKi6exQMLjCajoY2IFyuAQC47Rab
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoAOPB1Q+ZEOGErwysP46DQhAFOHy35c9qCrR+ejA0Lm
ezrgF6c2INW9A20urcBgcw86GOzuGwWjYHgDAFmsETo=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADng4MKACdH+mAXx26OC5zyBXHZR+MhrkPBtDdS8g+
ct2DC9BKH7HuJJU/CkbBcASj6ZwyMNDhh7AfAGvbEjU=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADng4MWEEkRPxAkgOqOlzq0eUJ0YTsJ6QvEk08Ek2e
VPcQch8h/6Pbjw5w6SMWEBtu1DJ/sJhLK3cNNjBS/DkKRgEyIJzuAVt6F+8=

                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoALeDpA6EgH4sSJBTD96DSp+onlk+oeYu0lF9DbPmIB
pfaRG5+jYBSMglEAA7jLDwBleQ1U
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoAOPB0gdKQDKp8QDQOE9KGrwwXQ1ROSJ2QfIT6x9pJq
HrGAUv30BiPNv+hgqLt/FIwCfGCg0zem/QBoaRGs
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ykAANAQ6oApEQvgOqVBxFShtAqEbotHU26HK4wQuUP1p
Dij6GsJQ+QyeaObgMPdAEpq9UNohAYc7/KDiIQ6ofHTz0e3H5Q5YuPg5YFen
gkMczRy4/9HVwcxFNwcd4HIvpcCFyuYSSh/UBrD0RC1AbjhT2x2jYBQMBMCV
f8lN35jlCwCRPhyi
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoAOVBxQ+ZGo/IZAKN8OjfaE0i4OqOaooKmDARc0Pro8
untc0GhcwAQqD3M3zFyYOLr/0OyH+88EjYYCuDwud8JoHPpxugOXOI5wgrsD
l3+GGkAPp+FmHy4wWNwxCkYBJQBXOqZe+gYAlHAYUQ==
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoAOTBxQ+SoO2OVV0Gg7HHw/B+zm4gIwfbjsR7cHl7me
aPJ2OPgwABOH6UP3By6Ay73o7kYHuNxNKPxJtWcUjIJRMAqGPgAAUrAQ1A==

                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoAOTBwwhPDKw/h2OMRd0MTR1aGrV8FhjqcDdvth6nHp
g4nD3GHigF0eF0CXJ5VPKaC2eaNgFIyCUTDYAWa5BwANVA3h
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADKg4MRAETqDoXNPXo+mHqcJkLE4eps0Pjo+uH8XGZ
Q4iPTuNSj24PIfXUAuSaSyv3jIJRMApGweABAIe8DIo=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADKg4MWIGJA6o8ujpc+nCpJ6TPDoc4ujyx7sAFcPmL
VHPQAaXuGgWjYBSMglGADgAZnwnc
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADJg4MeAG6vB2Ur4Imjs5H1weTJ5bGBXCpJ9ZdhMwl
FRDyJ6Xmj4JRMApGwcgFADzLC/A=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ykAsUHFA5Zs4YBcnF6Cbg4tPiMaln1h7SQXU8v8oGAWj
YBSMAlwAAKtdB6Q=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ygADKg4MKMAEjU8sQDeHkDi6PMxeFTQaXR0u2g6HPbjM
RbeXECDWH7QGuMJnFIyCUTAK6A1oXw4BAE/7C9Y=
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoALqDjg5+NSj67OxAG7PC71hOwj5C5C7sQFqGXOKBgF
o2AUjAJqAwAJRwhs
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yoALmDhgF1fBIU5IHS4+seaRCgiZT6w4rdw31MFouIyC
UTAK6AcA0WgHQA==
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4ykBtoOJAHXXEmjNUwXD3H6lgNDxGwSgYBbgBAKQRBHQ=

                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yjBSgYrDQLtgFIyCUTAKRgFxAADzigLk
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yjAKRsEoGAWjYBQMbgAAuiQCgA==
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yjAKRsEoGAWjYBQMbgAAuiQCgA==
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yjAKRsEoGAWjYBQMbgAAuiQCgA==
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|"Data" -> {213, {{CompressedData["
1:eJxTTMoPSmVkYGC4yjAKRsEoGAWjYBQMbgAAuiQCgA==
                   "], {}, None}}, None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>]}}]|>|>], 
     Expression, 
     AppearanceElements -> {"RowHeaders", "ColumnHeaders", "ResizeArea"}, 
     DefaultBaseStyle -> "TabularTableview", 
     TableViewBoxAlignment -> <|
      "ColumnsIndexed" -> {
        1 -> Right, 2 -> Right, 3 -> Right, 4 -> Right, 5 -> Right, 6 -> 
         Right, 7 -> Right, 8 -> Right, 9 -> Right, 10 -> Right, 11 -> Right, 
         12 -> Right, 13 -> Right, 14 -> Right, 15 -> Right, 16 -> Right, 17 -> 
         Right, 18 -> Right, 19 -> Right, 20 -> Right, 21 -> Right, 22 -> 
         Right, 23 -> Right, 24 -> Right, 25 -> Right, 26 -> Right, 27 -> 
         Right, 28 -> Right, 29 -> Right, 30 -> Right, 31 -> Right, 32 -> 
         Right}|>, 
     TableViewBoxFieldType -> <|
      "ColumnsIndexed" -> {
        1 -> Number, 2 -> Number, 3 -> Number, 4 -> Number, 5 -> Number, 6 -> 
         Number, 7 -> Number, 8 -> Number, 9 -> Number, 10 -> Number, 11 -> 
         Number, 12 -> Number, 13 -> Number, 14 -> Number, 15 -> Number, 16 -> 
         Number, 17 -> Number, 18 -> Number, 19 -> Number, 20 -> Number, 21 -> 
         Number, 22 -> Number, 23 -> Number, 24 -> Number, 25 -> Number, 26 -> 
         Number, 27 -> Number, 28 -> Number, 29 -> Number, 30 -> Number, 31 -> 
         Number, 32 -> Number}|>, 
     TableViewBoxHeaderItemSize -> <|"ColumnsIndexed" -> {1 -> 1.5}|>, 
     TableViewBoxHeaders -> <|
      "ColumnsIndexed" -> {
        1 -> TemplateBox[<|
           "LabelBoxes" -> "\"time\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"seconds\"", "DescriptorBoxes" -> 
            StyleBox["\"s\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 2 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.253 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 3 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.298 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 4 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.352 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 5 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.414 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 6 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.488 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 7 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.576 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 8 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.679 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 9 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.800 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 10 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.943 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 11 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.112 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 12 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.310 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 13 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.545 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 14 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.821 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 15 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"2.146 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 16 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"2.530 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 17 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"2.982 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 18 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"3.515 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 19 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"4.144 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 20 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"4.884 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 21 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"5.757 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 22 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"6.787 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 23 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"8.000 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 24 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"9.430 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 25 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"11.12 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 26 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"13.10 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 27 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"15.45 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 28 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"18.21 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 29 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"21.46 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 30 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"25.30 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 31 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"29.82 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 32 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"35.15 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"]}|>, 
     TableViewBoxItemDisplayRules -> <|
      "Columns" -> {{{Blank[Missing] -> (MakeBoxes[#, TraditionalForm]& )}}}, 
       "ColumnsIndexed" -> {
        1 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         2 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         3 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         4 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         5 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         6 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         7 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         8 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         9 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         10 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         11 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         12 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         13 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         14 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         15 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         16 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         17 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         18 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         19 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         20 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         21 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         22 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         23 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         24 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         25 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         26 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         27 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         28 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         29 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         30 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         31 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         32 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>}|>, 
     TableViewBoxItemSize -> <|
      "ColumnsIndexed" -> {
        1 -> 8, 2 -> 8, 3 -> 8, 4 -> 8, 5 -> 8, 6 -> 6, 7 -> 6, 8 -> 6, 9 -> 
         6, 10 -> 6, 11 -> 6, 12 -> 6, 13 -> 6, 14 -> 6, 15 -> 6, 16 -> 6, 17 -> 
         6, 18 -> 6, 19 -> 6, 20 -> 6, 21 -> 6, 22 -> 6, 23 -> 6, 24 -> 6, 25 -> 
         6, 26 -> 6, 27 -> 6, 28 -> 6, 29 -> 6, 30 -> 6, 31 -> 6, 32 -> 6}|>],
    "ItemSizeConstraints" -> <|
    "ColumnsIndexed" -> {
      1 -> {3, 8}, 2 -> {3, 8}, 3 -> {3, 8}, 4 -> {3, 8}, 5 -> {3, 8}, 
       6 -> {3, 6}, 7 -> {3, 6}, 8 -> {3, 6}, 9 -> {3, 6}, 10 -> {3, 6}, 
       11 -> {3, 6}, 12 -> {3, 6}, 13 -> {3, 6}, 14 -> {3, 6}, 15 -> {3, 6}, 
       16 -> {3, 6}, 17 -> {3, 6}, 18 -> {3, 6}, 19 -> {3, 6}, 20 -> {3, 6}, 
       21 -> {3, 6}, 22 -> {3, 6}, 23 -> {3, 6}, 24 -> {3, 6}, 25 -> {3, 6}, 
       26 -> {3, 6}, 27 -> {3, 6}, 28 -> {3, 6}, 29 -> {3, 6}, 30 -> {3, 6}, 
       31 -> {3, 6}, 32 -> {3, 6}}|>|>,
  "Tabular"]], "Output",
 CellChangeTimes->{{3.95898399207271*^9, 3.958984005658903*^9}, 
   3.9589841114869423`*^9, 3.9589841453256493`*^9, 3.9589845849835415`*^9, {
   3.958984661833826*^9, 3.958984671037527*^9}, 3.958984834902399*^9, {
   3.9589851142098255`*^9, 3.9589851170222855`*^9}, {3.9589852006732063`*^9, 
   3.958985230705551*^9}, {3.958985349892332*^9, 3.958985362143116*^9}, {
   3.9589854182862473`*^9, 3.9589854211812057`*^9}, {3.958985458223694*^9, 
   3.9589854608342075`*^9}, {3.958985562147148*^9, 3.9589855703239517`*^9}, 
   3.959259083364603*^9, 3.959259210988001*^9, 3.9592592882218075`*^9, {
   3.960993083004526*^9, 3.960993088638752*^9}, 3.9609932667161007`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"4313fa5b-0dee-a84e-94a4-f5aacbdd1ab7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Length", "@", "sizeRange"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.958986144267172*^9, 3.958986171780834*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"f40991cc-9914-f641-b727-1df9b4d2ed4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}], ",", 
   RowBox[{"Missing", "[", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9589861722068024`*^9},
 CellLabel->
  "Out[517]=",ExpressionUUID->"399fec24-1631-cf44-bcaa-73e9c69b7c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"tab", "[", 
   RowBox[{"[", 
    RowBox[{"207", ";;", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9589859789062443`*^9, 3.958985998298128*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"d2d4e83a-a176-d746-82fd-695f307c7573"],

Cell[BoxData[
 TemplateBox[<|
  "Summary" -> 
   TemplateBox[<|
     "RowCount" -> 7, "ColumnCount" -> 32, "ColumnTypes" -> Grid[{{"time", 
          TypeSpecifier["Quantity"]["Real64", "Seconds"]}, {"0.253 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.298 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.352 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.414 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.488 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.576 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.679 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.800 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.943 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.112 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.310 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.545 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.821 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.146 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.530 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.982 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"3.515 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"4.144 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"4.884 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"5.757 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"6.787 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"8.000 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"9.430 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"11.12 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"13.10 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"15.45 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"18.21 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"21.46 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"25.30 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"29.82 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"35.15 um", 
          TypeSpecifier["Quantity"]["Real64", "Micrometers"]}}, Alignment -> 
        Left], "Backend" -> "Tabular`Backend`WolframKernel", "UUID" -> 
      "Tabular-564bb339-0b48-4fe7-9ce6-f20ea1ee6f84", "Form" -> StandardForm, 
      "Interpretable" -> True|>, "TabularSummary", 
     BaseStyle -> (DynamicUpdating -> True)], "Main" -> TableViewBox[
     Tabular[<|
      "RawSchema" -> <|
        "ColumnProperties" -> <|
          "time" -> <|
            "ElementType" -> TypeSpecifier["Quantity"]["Real64", "Seconds"]|>,
            "0.253 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.298 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.352 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.414 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.488 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.576 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.679 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.800 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "0.943 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.112 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.310 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.545 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "1.821 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "2.146 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "2.530 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "2.982 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "3.515 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "4.144 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "4.884 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "5.757 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "6.787 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "8.000 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "9.430 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "11.12 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "13.10 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "15.45 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "18.21 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "21.46 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "25.30 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "29.82 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
           "35.15 um" -> <|
            "ElementType" -> 
             TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>|>, 
         "KeyColumns" -> None, "Backend" -> "WolframKernel"|>, 
       "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
             
             TabularColumn[<|
              "Data" -> {
                7, {{{5.5, 11.5, 17.5, 23.5, 29.5, 35.5, 41.5}, {}, None}}, 
                 None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Seconds"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{500., 450., 650., 400., 850., 300., 700.}, {}, None}}, 
                 None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{150., 50., 100., 200., 250., 400., 350.}, {}, None}}, 
                 None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{250., 0., 100., 100., 100., 250., 50.}, {}, None}}, 
                 None}, "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{50., 50., 0., 0., 50., 50., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 50., 0., 50., 100., 50., 100.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 0., 0., 0., 50., 50.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 100., 0., 0., 0., 0., 50.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 50., 0., 0., 50., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 0., 0., 0., 50., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 50., 0., 0., 0., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 0., 50., 0., 0., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 0., 0., 50., 0., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 0., 0., 40., 0., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {
                7, {{{0., 0., 0., 0., 10., 0., 0.}, {}, None}}, None}, 
               "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
             
             TabularColumn[<|
              "Data" -> {7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None},
                "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>]}}]|>|>], 
     Expression, 
     AppearanceElements -> {"RowHeaders", "ColumnHeaders", "ResizeArea"}, 
     DefaultBaseStyle -> "TabularTableview", 
     TableViewBoxAlignment -> <|
      "ColumnsIndexed" -> {
        1 -> Right, 2 -> Right, 3 -> Right, 4 -> Right, 5 -> Right, 6 -> 
         Right, 7 -> Right, 8 -> Right, 9 -> Right, 10 -> Right, 11 -> Right, 
         12 -> Right, 13 -> Right, 14 -> Right, 15 -> Right, 16 -> Right, 17 -> 
         Right, 18 -> Right, 19 -> Right, 20 -> Right, 21 -> Right, 22 -> 
         Right, 23 -> Right, 24 -> Right, 25 -> Right, 26 -> Right, 27 -> 
         Right, 28 -> Right, 29 -> Right, 30 -> Right, 31 -> Right, 32 -> 
         Right}|>, 
     TableViewBoxFieldType -> <|
      "ColumnsIndexed" -> {
        1 -> Number, 2 -> Number, 3 -> Number, 4 -> Number, 5 -> Number, 6 -> 
         Number, 7 -> Number, 8 -> Number, 9 -> Number, 10 -> Number, 11 -> 
         Number, 12 -> Number, 13 -> Number, 14 -> Number, 15 -> Number, 16 -> 
         Number, 17 -> Number, 18 -> Number, 19 -> Number, 20 -> Number, 21 -> 
         Number, 22 -> Number, 23 -> Number, 24 -> Number, 25 -> Number, 26 -> 
         Number, 27 -> Number, 28 -> Number, 29 -> Number, 30 -> Number, 31 -> 
         Number, 32 -> Number}|>, 
     TableViewBoxHeaderItemSize -> <|"ColumnsIndexed" -> {1 -> 1.5}|>, 
     TableViewBoxHeaders -> <|
      "ColumnsIndexed" -> {
        1 -> TemplateBox[<|
           "LabelBoxes" -> "\"time\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"seconds\"", "DescriptorBoxes" -> 
            StyleBox["\"s\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 2 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.253 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 3 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.298 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 4 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.352 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 5 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.414 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 6 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.488 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 7 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.576 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 8 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.679 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 9 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.800 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 10 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"0.943 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 11 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.112 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 12 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.310 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 13 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.545 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 14 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"1.821 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 15 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"2.146 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 16 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"2.530 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 17 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"2.982 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 18 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"3.515 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 19 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"4.144 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 20 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"4.884 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 21 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"5.757 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 22 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"6.787 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 23 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"8.000 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 24 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"9.430 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 25 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"11.12 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 26 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"13.10 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 27 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"15.45 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 28 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"18.21 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 29 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"21.46 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 30 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"25.30 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 31 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"29.82 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"], 32 -> 
         TemplateBox[<|
           "LabelBoxes" -> "\"35.15 um\"", "TypeBoxes" -> "\"Real64\"", 
            "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
            StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
           "QuantityWithDescriptorTabularHeader"]}|>, 
     TableViewBoxItemDisplayRules -> <|
      "Columns" -> {{{Blank[Missing] -> (MakeBoxes[#, TraditionalForm]& )}}}, 
       "ColumnsIndexed" -> {
        1 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         2 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         3 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         4 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         5 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         6 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         7 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         8 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         9 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         10 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         11 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         12 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         13 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         14 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         15 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         16 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         17 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         18 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         19 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         20 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         21 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         22 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         23 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         24 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         25 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         26 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         27 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         28 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         29 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         30 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         31 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>, 
         32 -> <|Blank[Quantity] :> (
            Function[{Tabular`Typesetting`TableView`Private`num$}, 
             Tabular`NumberListFormat[
             Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
              "ScientificFormQ" -> False, "SuffixFunction" -> None, "SuffixQ" -> 
              False, ScientificNotationThreshold -> {
                DirectedInfinity[-1], 
                DirectedInfinity[1]}][
             Tabular`Typesetting`TableView`Private`num$]][
             QuantityMagnitude[#]]& )|>}|>, 
     TableViewBoxItemSize -> <|
      "ColumnsIndexed" -> {
        1 -> 5, 2 -> 6, 3 -> 6, 4 -> 6, 5 -> 6, 6 -> 6, 7 -> 6, 8 -> 6, 9 -> 
         6, 10 -> 6, 11 -> 6, 12 -> 6, 13 -> 6, 14 -> 6, 15 -> 6, 16 -> 6, 17 -> 
         6, 18 -> 6, 19 -> 6, 20 -> 6, 21 -> 6, 22 -> 6, 23 -> 6, 24 -> 6, 25 -> 
         6, 26 -> 6, 27 -> 6, 28 -> 6, 29 -> 6, 30 -> 6, 31 -> 6, 32 -> 6}|>],
    "ItemSizeConstraints" -> <|
    "ColumnsIndexed" -> {
      1 -> {3, 5}, 2 -> {3, 6}, 3 -> {3, 6}, 4 -> {3, 6}, 5 -> {3, 6}, 
       6 -> {3, 6}, 7 -> {3, 6}, 8 -> {3, 6}, 9 -> {3, 6}, 10 -> {3, 6}, 
       11 -> {3, 6}, 12 -> {3, 6}, 13 -> {3, 6}, 14 -> {3, 6}, 15 -> {3, 6}, 
       16 -> {3, 6}, 17 -> {3, 6}, 18 -> {3, 6}, 19 -> {3, 6}, 20 -> {3, 6}, 
       21 -> {3, 6}, 22 -> {3, 6}, 23 -> {3, 6}, 24 -> {3, 6}, 25 -> {3, 6}, 
       26 -> {3, 6}, 27 -> {3, 6}, 28 -> {3, 6}, 29 -> {3, 6}, 30 -> {3, 6}, 
       31 -> {3, 6}, 32 -> {3, 6}}|>|>,
  "Tabular"]], "Output",
 CellChangeTimes->{{3.9589859842895775`*^9, 3.958985998903145*^9}, 
   3.959259341037945*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"3a28f2b7-61ab-e742-a195-a4754e3bdfbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "temp"}]], "Input",
 CellChangeTimes->{{3.958986246966877*^9, 3.9589862571836624`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"635c6872-238e-e342-892d-fac14dbfa49d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "32"}], "}"}]], "Output",
 CellChangeTimes->{{3.958986249609722*^9, 3.9589862575016003`*^9}, 
   3.9592593456962624`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"0aaca1ef-69c3-9345-8b5f-1c4cb952368e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TabularRow", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Missing", "[", "]"}], ",", 
    RowBox[{
     RowBox[{"Dimensions", "[", "temp", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.958986264288204*^9, 3.9589862741015224`*^9}},
 CellLabel->
  "In[524]:=",ExpressionUUID->"9f60d7ef-7420-9c4d-a97b-49ff2f43567a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TabularRow",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Column count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["32", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Column count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["32", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Columns: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\""}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TabularRow[<|
   "RawSchema" -> <|
     "ColumnProperties" -> {<|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
        "ElementType" -> "Null"|>}, "KeyColumns" -> None, "Backend" -> 
      "WolframKernel"|>, 
    "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
          
          TabularColumn[<|
           "Data" -> {
             1, {{1, {}, 
                DataStructure[
                 "BitVector", {"Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                Missing[]}}, None}, "ElementType" -> 
            "Scalar"["Null"]|>]}}]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.958986228173748*^9, {3.9589862677040596`*^9, 3.958986274646288*^9}},
 CellLabel->
  "Out[524]=",ExpressionUUID->"e5737204-b446-6548-a15d-5150addb0882"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Insert", "[", 
  RowBox[{"temp", ",", 
   RowBox[{"TabularRow", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", "temp", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9589861813973446`*^9, 3.958986216376999*^9}, 
   3.9589862821141033`*^9},
 CellLabel->
  "In[525]:=",ExpressionUUID->"a96045c6-30f5-2e4d-ba86-6ff674118bd3"],

Cell[BoxData[
 TemplateBox[{
  "Insert", "ins", 
   "\"Cannot insert at position \\!\\(\\*RowBox[{\\\"{\\\", \\\"3\\\", \
\\\"}\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Tabular[<7,32>]\\\\\\\"\\\"}]\\)\"", 2, 525, 106,
    30574330775752063618, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{{3.958986188806118*^9, 3.9589862176609707`*^9}, 
   3.9589862825145416`*^9},
 CellLabel->
  "During evaluation of \
In[525]:=",ExpressionUUID->"c4db35ea-ee14-cf40-9e0f-da7e25862d2a"],

Cell[BoxData[
 RowBox[{"Insert", "[", 
  RowBox[{
   TemplateBox[<|
    "Summary" -> 
     TemplateBox[<|
       "RowCount" -> 7, "ColumnCount" -> 32, "ColumnTypes" -> Grid[{{"time", 
            TypeSpecifier["Quantity"]["Real64", "Seconds"]}, {"0.253 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.298 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.352 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.414 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.488 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.576 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.679 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.800 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"0.943 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.112 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.310 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.545 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"1.821 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.146 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.530 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"2.982 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"3.515 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"4.144 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"4.884 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"5.757 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"6.787 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"8.000 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"9.430 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"11.12 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"13.10 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"15.45 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"18.21 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"21.46 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"25.30 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"29.82 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}, {"35.15 um", 
            TypeSpecifier["Quantity"]["Real64", "Micrometers"]}}, Alignment -> 
          Left], "Backend" -> "Tabular`Backend`WolframKernel", "UUID" -> 
        "Tabular-9412cd0f-7753-4309-a592-69ecd4c9d1af", "Form" -> 
        StandardForm, "Interpretable" -> True|>, "TabularSummary", 
       BaseStyle -> (DynamicUpdating -> True)], "Main" -> TableViewBox[
       Tabular[<|
        "RawSchema" -> <|
          "ColumnProperties" -> <|
            "time" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Seconds"]|>, 
             "0.253 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.298 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.352 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.414 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.488 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.576 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.679 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.800 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "0.943 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "1.112 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "1.310 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "1.545 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "1.821 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "2.146 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "2.530 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "2.982 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "3.515 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "4.144 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "4.884 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "5.757 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "6.787 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "8.000 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "9.430 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "11.12 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "13.10 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "15.45 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "18.21 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "21.46 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "25.30 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "29.82 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>, 
             "35.15 um" -> <|
              "ElementType" -> 
               TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>|>, 
           "KeyColumns" -> None, "Backend" -> "WolframKernel"|>, 
         "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{5.5, 11.5, 17.5, 23.5, 29.5, 35.5, 41.5}, {}, None}}, 
                   None}, "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Seconds"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{500., 450., 650., 400., 850., 300., 700.}, {}, None}},
                    None}, "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{150., 50., 100., 200., 250., 400., 350.}, {}, None}}, 
                   None}, "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{250., 0., 100., 100., 100., 250., 50.}, {}, None}}, 
                   None}, "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{50., 50., 0., 0., 50., 50., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 50., 0., 50., 100., 50., 100.}, {}, None}}, None},
                  "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 50., 50.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 100., 0., 0., 0., 0., 50.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 50., 0., 0., 50., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 50., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 50., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 50., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 50., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 40., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 10., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"]["Real64", "Micrometers"]|>], 
               
               TabularColumn[<|
                "Data" -> {
                  7, {{{0., 0., 0., 0., 0., 0., 0.}, {}, None}}, None}, 
                 "ElementType" -> 
                 TypeSpecifier["Quantity"][
                  "Real64", "Micrometers"]|>]}}]|>|>], Expression, 
       AppearanceElements -> {"RowHeaders", "ColumnHeaders", "ResizeArea"}, 
       DefaultBaseStyle -> "TabularTableview", ScrollPosition -> {0., 0.}, 
       TableViewBoxAlignment -> <|
        "ColumnsIndexed" -> {
          1 -> Right, 2 -> Right, 3 -> Right, 4 -> Right, 5 -> Right, 6 -> 
           Right, 7 -> Right, 8 -> Right, 9 -> Right, 10 -> Right, 11 -> 
           Right, 12 -> Right, 13 -> Right, 14 -> Right, 15 -> Right, 16 -> 
           Right, 17 -> Right, 18 -> Right, 19 -> Right, 20 -> Right, 21 -> 
           Right, 22 -> Right, 23 -> Right, 24 -> Right, 25 -> Right, 26 -> 
           Right, 27 -> Right, 28 -> Right, 29 -> Right, 30 -> Right, 31 -> 
           Right, 32 -> Right}|>, 
       TableViewBoxFieldType -> <|
        "ColumnsIndexed" -> {
          1 -> Number, 2 -> Number, 3 -> Number, 4 -> Number, 5 -> Number, 6 -> 
           Number, 7 -> Number, 8 -> Number, 9 -> Number, 10 -> Number, 11 -> 
           Number, 12 -> Number, 13 -> Number, 14 -> Number, 15 -> Number, 16 -> 
           Number, 17 -> Number, 18 -> Number, 19 -> Number, 20 -> Number, 21 -> 
           Number, 22 -> Number, 23 -> Number, 24 -> Number, 25 -> Number, 26 -> 
           Number, 27 -> Number, 28 -> Number, 29 -> Number, 30 -> Number, 31 -> 
           Number, 32 -> Number}|>, 
       TableViewBoxHeaderItemSize -> <|"ColumnsIndexed" -> {1 -> 1.5}|>, 
       TableViewBoxHeaders -> <|
        "ColumnsIndexed" -> {
          1 -> TemplateBox[<|
             "LabelBoxes" -> "\"time\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"seconds\"", "DescriptorBoxes" -> 
              StyleBox["\"s\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 2 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.253 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 3 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.298 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 4 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.352 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 5 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.414 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 6 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.488 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 7 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.576 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 8 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.679 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 9 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.800 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 10 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"0.943 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 11 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"1.112 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 12 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"1.310 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 13 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"1.545 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 14 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"1.821 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 15 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"2.146 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 16 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"2.530 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 17 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"2.982 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 18 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"3.515 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 19 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"4.144 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 20 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"4.884 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 21 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"5.757 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 22 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"6.787 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 23 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"8.000 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 24 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"9.430 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 25 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"11.12 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 26 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"13.10 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 27 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"15.45 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 28 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"18.21 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 29 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"21.46 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 30 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"25.30 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 31 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"29.82 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"], 32 -> 
           TemplateBox[<|
             "LabelBoxes" -> "\"35.15 um\"", "TypeBoxes" -> "\"Real64\"", 
              "SubTooltipBoxes" -> "\"micrometers\"", "DescriptorBoxes" -> 
              StyleBox["\"\[Mu]m\"", ShowStringCharacters -> False]|>, 
             "QuantityWithDescriptorTabularHeader"]}|>, 
       TableViewBoxItemDisplayRules -> <|
        "Columns" -> {{{
            Blank[Missing] -> (MakeBoxes[#, TraditionalForm]& )}}}, 
         "ColumnsIndexed" -> {
          1 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           2 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           3 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           4 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           5 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           6 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           7 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           8 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           9 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           10 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           11 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           12 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           13 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           14 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           15 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           16 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           17 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           18 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           19 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           20 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           21 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           22 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           23 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           24 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           25 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           26 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           27 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           28 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           29 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           30 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           31 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>, 
           32 -> <|Blank[Quantity] :> (
              Function[{Tabular`Typesetting`TableView`Private`num$}, 
               Tabular`NumberListFormat[
               Tabular, "Digits" -> 2, "RemoveSign" -> Identity, 
                "ScientificFormQ" -> False, "SuffixFunction" -> None, 
                "SuffixQ" -> False, ScientificNotationThreshold -> {
                  DirectedInfinity[-1], 
                  DirectedInfinity[1]}][
               Tabular`Typesetting`TableView`Private`num$]][
               QuantityMagnitude[#]]& )|>}|>, 
       TableViewBoxItemSize -> <|
        "ColumnsIndexed" -> {
          1 -> 5, 2 -> 6, 3 -> 6, 4 -> 6, 5 -> 6, 6 -> 6, 7 -> 6, 8 -> 6, 9 -> 
           6, 10 -> 6, 11 -> 6, 12 -> 6, 13 -> 6, 14 -> 6, 15 -> 6, 16 -> 6, 
           17 -> 6, 18 -> 6, 19 -> 6, 20 -> 6, 21 -> 6, 22 -> 6, 23 -> 6, 24 -> 
           6, 25 -> 6, 26 -> 6, 27 -> 6, 28 -> 6, 29 -> 6, 30 -> 6, 31 -> 6, 
           32 -> 6}|>], 
     "ItemSizeConstraints" -> <|
      "ColumnsIndexed" -> {
        1 -> {3, 5}, 2 -> {3, 6}, 3 -> {3, 6}, 4 -> {3, 6}, 5 -> {3, 6}, 
         6 -> {3, 6}, 7 -> {3, 6}, 8 -> {3, 6}, 9 -> {3, 6}, 10 -> {3, 6}, 
         11 -> {3, 6}, 12 -> {3, 6}, 13 -> {3, 6}, 14 -> {3, 6}, 15 -> {3, 6},
          16 -> {3, 6}, 17 -> {3, 6}, 18 -> {3, 6}, 19 -> {3, 6}, 
         20 -> {3, 6}, 21 -> {3, 6}, 22 -> {3, 6}, 23 -> {3, 6}, 24 -> {3, 6},
          25 -> {3, 6}, 26 -> {3, 6}, 27 -> {3, 6}, 28 -> {3, 6}, 
         29 -> {3, 6}, 30 -> {3, 6}, 31 -> {3, 6}, 32 -> {3, 6}}|>|>,
    "Tabular"], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TabularRow",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Column count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["32", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Column count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["32", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Columns: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\"", ",", "\"Null\"", ",", 
                    "\"Null\"", ",", "\"Null\""}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TabularRow[<|
     "RawSchema" -> <|
       "ColumnProperties" -> {<|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>, <|"ElementType" -> "Null"|>, <|
          "ElementType" -> "Null"|>}, "KeyColumns" -> None, "Backend" -> 
        "WolframKernel"|>, 
      "BackendData" -> <|"ColumnData" -> DataStructure["ColumnTable", {{
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> "Scalar"["Null"]|>], 
            
            TabularColumn[<|
             "Data" -> {
               1, {{1, {}, 
                  DataStructure[
                   "BitVector", {
                    "Data" -> ByteArray["/g=="], "Capacity" -> 1}] -> 
                  Missing[]}}, None}, "ElementType" -> 
              "Scalar"["Null"]|>]}}]|>|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "3"}], "]"}]], "Output",
 CellChangeTimes->{{3.9589861888750896`*^9, 3.9589862176957035`*^9}, 
   3.958986282639759*^9, {3.9592590944740124`*^9, 3.959259096650955*^9}},
 CellLabel->
  "Out[525]=",ExpressionUUID->"3b84d62e-c11c-c549-9f3f-0a6b575d7f4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Values", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ConstructColumns", "[", 
        RowBox[{"tab", ",", 
         RowBox[{"sizeRange", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "]"}], "//", "Normal"}], 
      ")"}]}], "]"}], ",", 
   RowBox[{"myPlotSequence", "[", "]"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"sizeRange", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "5"}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.958982491424055*^9, 3.958982690519388*^9}, {
  3.9589827383096066`*^9, 3.9589827923824673`*^9}, {3.958983409252266*^9, 
  3.9589834150653687`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"401325e8-b4ae-ca45-9d13-2937edeb5df8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{
         TagBox[{
           RGBColor[0.24, 0.6, 0.8], 
           PointSize[0.004583333333333334], 
           AbsoluteThickness[2], 
           PointBox[CompressedData["
1:eJxdlstLVVEYxTfSwFkNCiQanCJCIsTKnlZue5iVlan5qvSk3qtJYPQYCIGn
MKgQsqLHoMEtKKQikBoUNNi9Jo2a1PhQk4b9AQ16fGsd2OvAZfE76/v2+vZ5
cO7yoYmOUpVz7uvf3z+141fTf1n40eOE6Qy52vQceZFp+T14sWkt/RrT+/SX
mc6TE9PP5BWmv8krTZd8AK8y/UG/1rSZeatNT78DrxGuM63jevWmbeS1pk+5
3jrTSfrrTauY32Da+Am8wfRbAG80La7nJtPvXG+z7G+L6VLyVtMp5jWaFtdr
m2kDebvpTebtkPom0+L6+Xg/GXg5r1ezKe93Bv5Cf6dpyxv44Kq38HdhPnAG
Pv8a/m7T9CV8cP8r+HtMq+fhg2fot5jmj+GDF7+Av9d0+jl88NwT+K2mvc/g
t4q/z7SG64PDI/j7TRdU4IPn7sI/YPrzAXxw/UP4bZj/DnzwmXvwD5pevQ0f
XH8T/qGYM3C4Bf+w6dgsfLC/Ab8deg3nyZOob4/7A7j+EuqOxOv5I7GfCQdh
1xGzB4fL6Af7KZwHu1PQTtP8Auo6Yz8DJxfRL+y6JB/sJ9DfFa8XxHdHJR8c
zqIfzCPQH8L57ph9t8xP5nMn9a5H8sGuD/1k3M/QI/P3Sr5wJhx6pb9P+vvi
ebM+qSPz6I/Z90s+fe5ffHcs9j2Z+xc/kHkcl3wy+8UPwu6E9JO5/xPxvEHq
3UCc5wfi+ow+5wcX139Q8sl8fgYlX9ilcX9C5jxk5KfiZ2TkVWS9IP05mO+H
Oxn7ibAH8/lOxc/IzCczn4x5c2E3JPng4nkWToUz9uOoCBfXHZqL74ZjPxmO
fS+ckrl/4YpwEM7J3P9IzMlIPI+nz/svnAlXhINwLnmuJPmluN4Lp6V4vow+
77/UBzDfl1zyXBmKIynH9b4c16fCmXCFzO+FcF6O53ejYLwPyWjs+9F4vpTM
6y/9FekPYL4/Ofu5/7F4/WQs9r1wCi6+j2OSz3ruXzgHt0/H54v7zzp+z8D8
Pqf0ryCfOcznejwv/TmY/yfcOHLxfyAZj+fzYH4/U/DsdeSPS/54Md8fa+KS
kA==
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.95, 0.627, 0.1425], 
           PointSize[0.004583333333333334], 
           AbsoluteThickness[2], 
           PointBox[CompressedData["
1:eJxdlstLVVEYxTeNHEUDBw4anCJCIsLKXvZw2/tpejU1MzuabwJFCAyCNlH0
wEFRUUGPEwS9y6A/YA8aOGjQJMfnT2josMe31oG9Dsji5+/be+1zrvde1wxP
10ZXOOd+/f35l3b9bv0fr997/MKy+SO4zvL7J/AqS8/5essbb8ANlpc+gFdb
Li2AM8v5z+C1lj85v86y7it4vfQ3yvwGyyc870af3s8my7l34CbL/m/gzZaN
PM8Wy+4v4K3S3yx925Dcf7vlSt7vDstF+p2y3y7LFt5vi/Tvtqye9x7p3yvr
91lWz7/Vcpbn8Zb1OE8AL7yFb7Pk8w1t6bzbb/kM8wGc8TwHLJdfwYP9S/iD
lj8KeHDHQ/hDOM9zePDiU/jDlnMv4MENj+CPWM48hgeX9Ectbz+ABy/fhz9m
ee8uPLiJ/rhlvA4PnrkFf8Iym4cHuzvIkzjPTXhwdhX+lOwPdleQ7eLbZf1p
+GF4sL8G35Ge14PdJOY70v2ieNeZ7uc70/MF+mms70zP42rgWczVpL8m6znP
9V2yXjh0pftFMq/udD8PdmexXjgKuzNI/F144UDGFclc3yP9PdIvPtLz6k3Z
k9nfK+vFuz5ZT2Z/Xzofhav74HrhIByFXX+6n+9PfRAfhd056Sfz/MJR5t2A
9AuHgXQ+Crvz0i8chKOwG5T+wdQH4Ujmc7wg/eDq/S4+kvn88pSzPJ33ebpf
Lj6QcZ5C9osyX5L5+TGU+mwo7fPic+FAZj+Z/cKlrHfDqc+EPZn9wkHmC+Hq
cwrnK8W7i9Iv7IVzMvuFC+EoXMp+bkT6R9J5L5wLB+FCOAqX0udGpR9cvf70
7Jf5IL4QjsKlsBtL+7Kx1HsyXr9cfBBfkPn6iy+F3bj0j6fek3HlwgHM78eC
nv0yX4p3E9I/kXpPZr/MB+FC1kfhUuarzwFc2WQ67yfTuRzJ+w30fP78nsf3
f5T5kp79U2lfRubzJ7N/Svrp8f9OAS4v+z9EFmVv
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[{
           RGBColor[0.455, 0.7, 0.21], 
           PointSize[0.004583333333333334], 
           AbsoluteThickness[2], 
           PointBox[CompressedData["
1:eJxd1ktvTlEUxvEdMTA0MOjA4BAREZG633VXKaWttxfaUnWU0nZSkUgMJNaA
uESCqIG4HXwBH2EPDUzNzwcwMOzQZT+ryf6fRFZ+77PXXufs403fTbNLo3Nr
Qgg///77V/P1u+d/Wf4c9UEsvS7XFff6XL99kDfkOt/IXbl+fytvzLWzLFeq
nm/O9clXeQv235rrD99/W67dfj/bc42f5B24/53o78713kd5V65rPd+da/Ve
3oN8L+bvy7Xrjbwf+x/ItfX8YK6r53ko1+kv8mHMP4LnO4r9j2H98Vwn38k9
qn7esew3+Zeff2+u/j6sF/udKJ/H5Oq58j71v1beV64PJ3N9+Uy5fPux8lPl
fiavvFLen2u3bP3oP51rfKFcbh8pP5Nr56FyOTxVHSj3M7m6r/xsaZPjA+Xn
NO+ucjgM5pruKB9E/xDyIfQPqy4oH0Z+XnVKuRyX9HmndOxgvVvPndyaF0ZU
dcWRcr3BaQT3N6rPZzV/FPPh5NZ+YQz9Y+X92Fi5PsFhHPc/XuYGJ7fuJ1wo
Hd0+H05un3+xdJT9eQx5cvs1gf6JMjfkCXmYRD9scHL7NVU6wub2fuThEvrd
/v6RJzhcRj9scHL7+U+XjtPleoMTHK5gPmxwcvv8GfTDBie3919FP2xwcvt7
qMu8gqNb82rY3NqvQZ6wX4s8XCtdwRGu3boMbuAEt9gvzJZ5BUe3z0duyBvk
/j3282mxPlzHfDjCtdvPH3mDPCFv4XAD891+/shr2OAG/Ql5C4c5zIej288f
NrhBf0LeIg83Md/tz4+8hg1u4AS3cLiF+XCEa9jgBk5wC4d52b9/cHTr/28N
m9vnoz8hb5Gv/o7QftVCuT7K/j2qYfP1/v7hJPvvjVZe/f2zWM6r3P73HK5h
Wyz3azwfiH8AZkFDTQ==
            "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
         TagBox[{
           RGBColor[0.922526, 0.385626, 0.209179], 
           PointSize[0.004583333333333334], 
           AbsoluteThickness[2], 
           PointBox[CompressedData["
1:eJxd1rtOVVEQxvGJlaWFBYXF0RhjjDF4xyvLK6gIRxAVb2wQFG0wJhZWjkaj
MTHiLdFuP4KPMKUvYL8fwdLSy5o5Zv47IZMf35o1a2/OOZzNi6vTy+tE5Mef
n7+1Xj9H/5X+p+K/qLW8c6+v9dtb94Zah9+7N9b6+qN7qNZfkW+qdWXN3avV
Pri3YP+t6N+G/bfDO3DenbV+/+rehfMO4zy7ax354t5T69Bn916cZ1+t3Uv3
fuQHcL6DyEfgQ7UOnsdh5Ecw72itg+d1rNa1N+7jtQ7udxT3V/L51D14Xidq
jeepsJzM+6v74SvPT+XzqFueeD2d70dhOVNr/4Xnbrnv9azPf+a52557Ppbn
6VheL+O+/pHn4zjfuVrLqufu7rHn5z1/6rl7cF1wz3nutkX//UTeTyfyeeQi
+sNx/5PIJ7H/VLZOob+f+0vYL0Vufex/Cf2whv25WTiu6bxfmUY/bGHfT2Yw
H9aZvN6Qy+WcF1hhg2U230+Zzfejs3m9IZcrmB/2S2HDermK+bDCFo7+a+iH
FbZw9M/lWubyeoUtHP3XMR/WcPz9kcsN9MMKGyw30Q8rbLDcQj+ssMFyG/2w
huP1A8t8dgnH6z8c82FpsntwgRtYwz6/RW5wh/WykN1byOsL3MAKt9jPkHew
LGb34BL2/RrkCrewwR0sdzAfLuGYj1zhFja4g2Up799bynmBG1jhFja4g2U5
uxeOzxPkDaxwCxvcwXIX8+ES9vM0yBVuYQvH9wbkcg/zw/F+Rt7ACrewwR0s
K5gPF7gJx/9HuIUN/R3ywfeQmA+XcLz+w/H5hvUtcnPH+7DDfvIguxeO+XCD
9Qq3/9f/BoWHNB8=
            "]]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
         TagBox[{
           RGBColor[0.578, 0.51, 0.85], 
           PointSize[0.004583333333333334], 
           AbsoluteThickness[2], 
           PointBox[CompressedData["
1:eJxd1stqVEEQxvHClUsXLly4GEVERCTe76ajiSZGzWS839sxiUk2EcGFIFiK
IL5FP0q9hPt+BB/BS1cd6f/AUPzm6+rqc84kzIHpzmR9l4j8/PP+W9vr1+y/
MvMl+Qetph337lZHn9x7vH70urfV8Tf3Pq9bXvdjv5H7s/tgq/WD+xDmHcZ+
RzD/KHysVXvvPo7+Gc+/uk+g/yTWn2p1uD+nvX/qPoPzn8X8c8jPY78LmH8R
/ZdaHe7XZZz/SqvD/bra6rvv7lnMT76fPw9NyOf661O3/PB6DXk4znu930/d
w/2cR/98fx5ZQL6A/AbO75Ylrze9PvEclkXki/28YZ/IlzD/Vr9OYVn26i9d
xv63kcNyB/vDchf9sKygfwX52O3Xl8ZYP+7XG3JZRf9qv15hg2XS75dgnfTr
DZZ7vROssMFyH/3hmO+O52VYLw/QH45+5AbLQ/TDCls47v8j9MMKGyyP0Q8r
bPDwdxT9sMIGy1P0wwobLM/QDytssDxHP6ywwfIC/bDCFo7n9xL9sMIGyyv0
wwobLLn3CE5whhUuYb8+Q15heY35cIIzrGGfV5AbXGGZYn44/h8hz7DCBTa4
wvIG8+EEZ1jhAhtcYVlz+/WO1vo8wRlWuGA/Q16Ry3qfj+AEZ1jhAhtcYdnA
fDiF/bwZucIFNrjC8hbz4QRnWMPx/UducMV62cT8zT5PcMZ6hQts6K/Ih9+B
8f3b6vMEZ1jhAhtcYdnG/O0+T8hzOH4PIi//899C4g2B
            "]]}, Annotation[#, "Charting`Private`Tag#5"]& ]}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxdlstLVVEYxTfSwFkNCiQanCJCIsTKnlZue5iVlan5qvSk3qtJYPQYCIGn
MKgQsqLHoMEtKKQikBoUNNi9Jo2a1PhQk4b9AQ16fGsd2OvAZfE76/v2+vZ5
cO7yoYmOUpVz7uvf3z+141fTf1n40eOE6Qy52vQceZFp+T14sWkt/RrT+/SX
mc6TE9PP5BWmv8krTZd8AK8y/UG/1rSZeatNT78DrxGuM63jevWmbeS1pk+5
3jrTSfrrTauY32Da+Am8wfRbAG80La7nJtPvXG+z7G+L6VLyVtMp5jWaFtdr
m2kDebvpTebtkPom0+L6+Xg/GXg5r1ezKe93Bv5Cf6dpyxv44Kq38HdhPnAG
Pv8a/m7T9CV8cP8r+HtMq+fhg2fot5jmj+GDF7+Av9d0+jl88NwT+K2mvc/g
t4q/z7SG64PDI/j7TRdU4IPn7sI/YPrzAXxw/UP4bZj/DnzwmXvwD5pevQ0f
XH8T/qGYM3C4Bf+w6dgsfLC/Ab8deg3nyZOob4/7A7j+EuqOxOv5I7GfCQdh
1xGzB4fL6Af7KZwHu1PQTtP8Auo6Yz8DJxfRL+y6JB/sJ9DfFa8XxHdHJR8c
zqIfzCPQH8L57ph9t8xP5nMn9a5H8sGuD/1k3M/QI/P3Sr5wJhx6pb9P+vvi
ebM+qSPz6I/Z90s+fe5ffHcs9j2Z+xc/kHkcl3wy+8UPwu6E9JO5/xPxvEHq
3UCc5wfi+ow+5wcX139Q8sl8fgYlX9ilcX9C5jxk5KfiZ2TkVWS9IP05mO+H
Oxn7ibAH8/lOxc/IzCczn4x5c2E3JPng4nkWToUz9uOoCBfXHZqL74ZjPxmO
fS+ckrl/4YpwEM7J3P9IzMlIPI+nz/svnAlXhINwLnmuJPmluN4Lp6V4vow+
77/UBzDfl1zyXBmKIynH9b4c16fCmXCFzO+FcF6O53ejYLwPyWjs+9F4vpTM
6y/9FekPYL4/Ofu5/7F4/WQs9r1wCi6+j2OSz3ruXzgHt0/H54v7zzp+z8D8
Pqf0ryCfOcznejwv/TmY/yfcOHLxfyAZj+fzYH4/U/DsdeSPS/54Md8fa+KS
kA==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxdlstLVVEYxTeNHEUDBw4anCJCIsLKXvZw2/tpejU1MzuabwJFCAyCNlH0
wEFRUUGPEwS9y6A/YA8aOGjQJMfnT2josMe31oG9Dsji5+/be+1zrvde1wxP
10ZXOOd+/f35l3b9bv0fr997/MKy+SO4zvL7J/AqS8/5essbb8ANlpc+gFdb
Li2AM8v5z+C1lj85v86y7it4vfQ3yvwGyyc870af3s8my7l34CbL/m/gzZaN
PM8Wy+4v4K3S3yx925Dcf7vlSt7vDstF+p2y3y7LFt5vi/Tvtqye9x7p3yvr
91lWz7/Vcpbn8Zb1OE8AL7yFb7Pk8w1t6bzbb/kM8wGc8TwHLJdfwYP9S/iD
lj8KeHDHQ/hDOM9zePDiU/jDlnMv4MENj+CPWM48hgeX9Ectbz+ABy/fhz9m
ee8uPLiJ/rhlvA4PnrkFf8Iym4cHuzvIkzjPTXhwdhX+lOwPdleQ7eLbZf1p
+GF4sL8G35Ge14PdJOY70v2ieNeZ7uc70/MF+mms70zP42rgWczVpL8m6znP
9V2yXjh0pftFMq/udD8PdmexXjgKuzNI/F144UDGFclc3yP9PdIvPtLz6k3Z
k9nfK+vFuz5ZT2Z/Xzofhav74HrhIByFXX+6n+9PfRAfhd056Sfz/MJR5t2A
9AuHgXQ+Crvz0i8chKOwG5T+wdQH4Ujmc7wg/eDq/S4+kvn88pSzPJ33ebpf
Lj6QcZ5C9osyX5L5+TGU+mwo7fPic+FAZj+Z/cKlrHfDqc+EPZn9wkHmC+Hq
cwrnK8W7i9Iv7IVzMvuFC+EoXMp+bkT6R9J5L5wLB+FCOAqX0udGpR9cvf70
7Jf5IL4QjsKlsBtL+7Kx1HsyXr9cfBBfkPn6iy+F3bj0j6fek3HlwgHM78eC
nv0yX4p3E9I/kXpPZr/MB+FC1kfhUuarzwFc2WQ67yfTuRzJ+w30fP78nsf3
f5T5kp79U2lfRubzJ7N/Svrp8f9OAS4v+z9EFmVv
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.455, 0.7, 0.21], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxd1ktvTlEUxvEdMTA0MOjA4BAREZG633VXKaWttxfaUnWU0nZSkUgMJNaA
uESCqIG4HXwBH2EPDUzNzwcwMOzQZT+ryf6fRFZ+77PXXufs403fTbNLo3Nr
Qgg///77V/P1u+d/Wf4c9UEsvS7XFff6XL99kDfkOt/IXbl+fytvzLWzLFeq
nm/O9clXeQv235rrD99/W67dfj/bc42f5B24/53o78713kd5V65rPd+da/Ve
3oN8L+bvy7Xrjbwf+x/ItfX8YK6r53ko1+kv8mHMP4LnO4r9j2H98Vwn38k9
qn7esew3+Zeff2+u/j6sF/udKJ/H5Oq58j71v1beV64PJ3N9+Uy5fPux8lPl
fiavvFLen2u3bP3oP51rfKFcbh8pP5Nr56FyOTxVHSj3M7m6r/xsaZPjA+Xn
NO+ucjgM5pruKB9E/xDyIfQPqy4oH0Z+XnVKuRyX9HmndOxgvVvPndyaF0ZU
dcWRcr3BaQT3N6rPZzV/FPPh5NZ+YQz9Y+X92Fi5PsFhHPc/XuYGJ7fuJ1wo
Hd0+H05un3+xdJT9eQx5cvs1gf6JMjfkCXmYRD9scHL7NVU6wub2fuThEvrd
/v6RJzhcRj9scHL7+U+XjtPleoMTHK5gPmxwcvv8GfTDBie3919FP2xwcvt7
qMu8gqNb82rY3NqvQZ6wX4s8XCtdwRGu3boMbuAEt9gvzJZ5BUe3z0duyBvk
/j3282mxPlzHfDjCtdvPH3mDPCFv4XAD891+/shr2OAG/Ql5C4c5zIej288f
NrhBf0LeIg83Md/tz4+8hg1u4AS3cLiF+XCEa9jgBk5wC4d52b9/cHTr/28N
m9vnoz8hb5Gv/o7QftVCuT7K/j2qYfP1/v7hJPvvjVZe/f2zWM6r3P73HK5h
Wyz3azwfiH8AZkFDTQ==
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxd1rtOVVEQxvGJlaWFBYXF0RhjjDF4xyvLK6gIRxAVb2wQFG0wJhZWjkaj
MTHiLdFuP4KPMKUvYL8fwdLSy5o5Zv47IZMf35o1a2/OOZzNi6vTy+tE5Mef
n7+1Xj9H/5X+p+K/qLW8c6+v9dtb94Zah9+7N9b6+qN7qNZfkW+qdWXN3avV
Pri3YP+t6N+G/bfDO3DenbV+/+rehfMO4zy7ax354t5T69Bn916cZ1+t3Uv3
fuQHcL6DyEfgQ7UOnsdh5Ecw72itg+d1rNa1N+7jtQ7udxT3V/L51D14Xidq
jeepsJzM+6v74SvPT+XzqFueeD2d70dhOVNr/4Xnbrnv9azPf+a52557Ppbn
6VheL+O+/pHn4zjfuVrLqufu7rHn5z1/6rl7cF1wz3nutkX//UTeTyfyeeQi
+sNx/5PIJ7H/VLZOob+f+0vYL0Vufex/Cf2whv25WTiu6bxfmUY/bGHfT2Yw
H9aZvN6Qy+WcF1hhg2U230+Zzfejs3m9IZcrmB/2S2HDermK+bDCFo7+a+iH
FbZw9M/lWubyeoUtHP3XMR/WcPz9kcsN9MMKGyw30Q8rbLDcQj+ssMFyG/2w
huP1A8t8dgnH6z8c82FpsntwgRtYwz6/RW5wh/WykN1byOsL3MAKt9jPkHew
LGb34BL2/RrkCrewwR0sdzAfLuGYj1zhFja4g2Up799bynmBG1jhFja4g2U5
uxeOzxPkDaxwCxvcwXIX8+ES9vM0yBVuYQvH9wbkcg/zw/F+Rt7ACrewwR0s
K5gPF7gJx/9HuIUN/R3ywfeQmA+XcLz+w/H5hvUtcnPH+7DDfvIguxeO+XCD
9Qq3/9f/BoWHNB8=
                "]]}, "Charting`Private`Tag#4"], 
             Annotation[{
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.578, 0.51, 0.85], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxd1stqVEEQxvHClUsXLly4GEVERCTe76ajiSZGzWS839sxiUk2EcGFIFiK
IL5FP0q9hPt+BB/BS1cd6f/AUPzm6+rqc84kzIHpzmR9l4j8/PP+W9vr1+y/
MvMl+Qetph337lZHn9x7vH70urfV8Tf3Pq9bXvdjv5H7s/tgq/WD+xDmHcZ+
RzD/KHysVXvvPo7+Gc+/uk+g/yTWn2p1uD+nvX/qPoPzn8X8c8jPY78LmH8R
/ZdaHe7XZZz/SqvD/bra6rvv7lnMT76fPw9NyOf661O3/PB6DXk4znu930/d
w/2cR/98fx5ZQL6A/AbO75Ylrze9PvEclkXki/28YZ/IlzD/Vr9OYVn26i9d
xv63kcNyB/vDchf9sKygfwX52O3Xl8ZYP+7XG3JZRf9qv15hg2XS75dgnfTr
DZZ7vROssMFyH/3hmO+O52VYLw/QH45+5AbLQ/TDCls47v8j9MMKGyyP0Q8r
bPDwdxT9sMIGy1P0wwobLM/QDytssDxHP6ywwfIC/bDCFo7n9xL9sMIGyyv0
wwobLLn3CE5whhUuYb8+Q15heY35cIIzrGGfV5AbXGGZYn44/h8hz7DCBTa4
wvIG8+EEZ1jhAhtcYVlz+/WO1vo8wRlWuGA/Q16Ry3qfj+AEZ1jhAhtcYdnA
fDiF/bwZucIFNrjC8hbz4QRnWMPx/UducMV62cT8zT5PcMZ6hQts6K/Ih9+B
8f3b6vMEZ1jhAhtcYdnG/O0+T8hzOH4PIi//899C4g2B
                "]]}, "Charting`Private`Tag#5"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0., 213.}, {0, 2375.}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0., 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.004583333333333334], 
                 RGBColor[0.578, 0.51, 0.85], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.004583333333333334], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.004583333333333334], 
                 RGBColor[0.455, 0.7, 0.21], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.004583333333333334], 
                 RGBColor[0.95, 0.627, 0.1425], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.004583333333333334], 
                 RGBColor[0.24, 0.6, 0.8], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0., 213.}, {0, 2375.}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0},
              "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.578, 0.51, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.455, 0.7, 0.21], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.004583333333333334], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>], 
         ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
        False]}, 
      Annotation[{{
         Annotation[{
           Directive[
            PointSize[0.004583333333333334], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]], 
           Point[CompressedData["
1:eJxdlstLVVEYxTfSwFkNCiQanCJCIsTKnlZue5iVlan5qvSk3qtJYPQYCIGn
MKgQsqLHoMEtKKQikBoUNNi9Jo2a1PhQk4b9AQ16fGsd2OvAZfE76/v2+vZ5
cO7yoYmOUpVz7uvf3z+141fTf1n40eOE6Qy52vQceZFp+T14sWkt/RrT+/SX
mc6TE9PP5BWmv8krTZd8AK8y/UG/1rSZeatNT78DrxGuM63jevWmbeS1pk+5
3jrTSfrrTauY32Da+Am8wfRbAG80La7nJtPvXG+z7G+L6VLyVtMp5jWaFtdr
m2kDebvpTebtkPom0+L6+Xg/GXg5r1ezKe93Bv5Cf6dpyxv44Kq38HdhPnAG
Pv8a/m7T9CV8cP8r+HtMq+fhg2fot5jmj+GDF7+Av9d0+jl88NwT+K2mvc/g
t4q/z7SG64PDI/j7TRdU4IPn7sI/YPrzAXxw/UP4bZj/DnzwmXvwD5pevQ0f
XH8T/qGYM3C4Bf+w6dgsfLC/Ab8deg3nyZOob4/7A7j+EuqOxOv5I7GfCQdh
1xGzB4fL6Af7KZwHu1PQTtP8Auo6Yz8DJxfRL+y6JB/sJ9DfFa8XxHdHJR8c
zqIfzCPQH8L57ph9t8xP5nMn9a5H8sGuD/1k3M/QI/P3Sr5wJhx6pb9P+vvi
ebM+qSPz6I/Z90s+fe5ffHcs9j2Z+xc/kHkcl3wy+8UPwu6E9JO5/xPxvEHq
3UCc5wfi+ow+5wcX139Q8sl8fgYlX9ilcX9C5jxk5KfiZ2TkVWS9IP05mO+H
Oxn7ibAH8/lOxc/IzCczn4x5c2E3JPng4nkWToUz9uOoCBfXHZqL74ZjPxmO
fS+ckrl/4YpwEM7J3P9IzMlIPI+nz/svnAlXhINwLnmuJPmluN4Lp6V4vow+
77/UBzDfl1zyXBmKIynH9b4c16fCmXCFzO+FcF6O53ejYLwPyWjs+9F4vpTM
6y/9FekPYL4/Ofu5/7F4/WQs9r1wCi6+j2OSz3ruXzgHt0/H54v7zzp+z8D8
Pqf0ryCfOcznejwv/TmY/yfcOHLxfyAZj+fzYH4/U/DsdeSPS/54Md8fa+KS
kA==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            PointSize[0.004583333333333334], 
            RGBColor[0.95, 0.627, 0.1425], 
            AbsoluteThickness[2]], 
           Point[CompressedData["
1:eJxdlstLVVEYxTeNHEUDBw4anCJCIsLKXvZw2/tpejU1MzuabwJFCAyCNlH0
wEFRUUGPEwS9y6A/YA8aOGjQJMfnT2josMe31oG9Dsji5+/be+1zrvde1wxP
10ZXOOd+/f35l3b9bv0fr997/MKy+SO4zvL7J/AqS8/5essbb8ANlpc+gFdb
Li2AM8v5z+C1lj85v86y7it4vfQ3yvwGyyc870af3s8my7l34CbL/m/gzZaN
PM8Wy+4v4K3S3yx925Dcf7vlSt7vDstF+p2y3y7LFt5vi/Tvtqye9x7p3yvr
91lWz7/Vcpbn8Zb1OE8AL7yFb7Pk8w1t6bzbb/kM8wGc8TwHLJdfwYP9S/iD
lj8KeHDHQ/hDOM9zePDiU/jDlnMv4MENj+CPWM48hgeX9Ectbz+ABy/fhz9m
ee8uPLiJ/rhlvA4PnrkFf8Iym4cHuzvIkzjPTXhwdhX+lOwPdleQ7eLbZf1p
+GF4sL8G35Ge14PdJOY70v2ieNeZ7uc70/MF+mms70zP42rgWczVpL8m6znP
9V2yXjh0pftFMq/udD8PdmexXjgKuzNI/F144UDGFclc3yP9PdIvPtLz6k3Z
k9nfK+vFuz5ZT2Z/Xzofhav74HrhIByFXX+6n+9PfRAfhd056Sfz/MJR5t2A
9AuHgXQ+Crvz0i8chKOwG5T+wdQH4Ujmc7wg/eDq/S4+kvn88pSzPJ33ebpf
Lj6QcZ5C9osyX5L5+TGU+mwo7fPic+FAZj+Z/cKlrHfDqc+EPZn9wkHmC+Hq
cwrnK8W7i9Iv7IVzMvuFC+EoXMp+bkT6R9J5L5wLB+FCOAqX0udGpR9cvf70
7Jf5IL4QjsKlsBtL+7Kx1HsyXr9cfBBfkPn6iy+F3bj0j6fek3HlwgHM78eC
nv0yX4p3E9I/kXpPZr/MB+FC1kfhUuarzwFc2WQ67yfTuRzJ+w30fP78nsf3
f5T5kp79U2lfRubzJ7N/Svrp8f9OAS4v+z9EFmVv
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            PointSize[0.004583333333333334], 
            RGBColor[0.455, 0.7, 0.21], 
            AbsoluteThickness[2]], 
           Point[CompressedData["
1:eJxd1ktvTlEUxvEdMTA0MOjA4BAREZG633VXKaWttxfaUnWU0nZSkUgMJNaA
uESCqIG4HXwBH2EPDUzNzwcwMOzQZT+ryf6fRFZ+77PXXufs403fTbNLo3Nr
Qgg///77V/P1u+d/Wf4c9UEsvS7XFff6XL99kDfkOt/IXbl+fytvzLWzLFeq
nm/O9clXeQv235rrD99/W67dfj/bc42f5B24/53o78713kd5V65rPd+da/Ve
3oN8L+bvy7Xrjbwf+x/ItfX8YK6r53ko1+kv8mHMP4LnO4r9j2H98Vwn38k9
qn7esew3+Zeff2+u/j6sF/udKJ/H5Oq58j71v1beV64PJ3N9+Uy5fPux8lPl
fiavvFLen2u3bP3oP51rfKFcbh8pP5Nr56FyOTxVHSj3M7m6r/xsaZPjA+Xn
NO+ucjgM5pruKB9E/xDyIfQPqy4oH0Z+XnVKuRyX9HmndOxgvVvPndyaF0ZU
dcWRcr3BaQT3N6rPZzV/FPPh5NZ+YQz9Y+X92Fi5PsFhHPc/XuYGJ7fuJ1wo
Hd0+H05un3+xdJT9eQx5cvs1gf6JMjfkCXmYRD9scHL7NVU6wub2fuThEvrd
/v6RJzhcRj9scHL7+U+XjtPleoMTHK5gPmxwcvv8GfTDBie3919FP2xwcvt7
qMu8gqNb82rY3NqvQZ6wX4s8XCtdwRGu3boMbuAEt9gvzJZ5BUe3z0duyBvk
/j3282mxPlzHfDjCtdvPH3mDPCFv4XAD891+/shr2OAG/Ql5C4c5zIej288f
NrhBf0LeIg83Md/tz4+8hg1u4AS3cLiF+XCEa9jgBk5wC4d52b9/cHTr/28N
m9vnoz8hb5Gv/o7QftVCuT7K/j2qYfP1/v7hJPvvjVZe/f2zWM6r3P73HK5h
Wyz3azwfiH8AZkFDTQ==
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            PointSize[0.004583333333333334], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           Point[CompressedData["
1:eJxd1rtOVVEQxvGJlaWFBYXF0RhjjDF4xyvLK6gIRxAVb2wQFG0wJhZWjkaj
MTHiLdFuP4KPMKUvYL8fwdLSy5o5Zv47IZMf35o1a2/OOZzNi6vTy+tE5Mef
n7+1Xj9H/5X+p+K/qLW8c6+v9dtb94Zah9+7N9b6+qN7qNZfkW+qdWXN3avV
Pri3YP+t6N+G/bfDO3DenbV+/+rehfMO4zy7ax354t5T69Bn916cZ1+t3Uv3
fuQHcL6DyEfgQ7UOnsdh5Ecw72itg+d1rNa1N+7jtQ7udxT3V/L51D14Xidq
jeepsJzM+6v74SvPT+XzqFueeD2d70dhOVNr/4Xnbrnv9azPf+a52557Ppbn
6VheL+O+/pHn4zjfuVrLqufu7rHn5z1/6rl7cF1wz3nutkX//UTeTyfyeeQi
+sNx/5PIJ7H/VLZOob+f+0vYL0Vufex/Cf2whv25WTiu6bxfmUY/bGHfT2Yw
H9aZvN6Qy+WcF1hhg2U230+Zzfejs3m9IZcrmB/2S2HDermK+bDCFo7+a+iH
FbZw9M/lWubyeoUtHP3XMR/WcPz9kcsN9MMKGyw30Q8rbLDcQj+ssMFyG/2w
huP1A8t8dgnH6z8c82FpsntwgRtYwz6/RW5wh/WykN1byOsL3MAKt9jPkHew
LGb34BL2/RrkCrewwR0sdzAfLuGYj1zhFja4g2Up799bynmBG1jhFja4g2U5
uxeOzxPkDaxwCxvcwXIX8+ES9vM0yBVuYQvH9wbkcg/zw/F+Rt7ACrewwR0s
K5gPF7gJx/9HuIUN/R3ywfeQmA+XcLz+w/H5hvUtcnPH+7DDfvIguxeO+XCD
9Qq3/9f/BoWHNB8=
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            PointSize[0.004583333333333334], 
            RGBColor[0.578, 0.51, 0.85], 
            AbsoluteThickness[2]], 
           Point[CompressedData["
1:eJxd1stqVEEQxvHClUsXLly4GEVERCTe76ajiSZGzWS839sxiUk2EcGFIFiK
IL5FP0q9hPt+BB/BS1cd6f/AUPzm6+rqc84kzIHpzmR9l4j8/PP+W9vr1+y/
MvMl+Qetph337lZHn9x7vH70urfV8Tf3Pq9bXvdjv5H7s/tgq/WD+xDmHcZ+
RzD/KHysVXvvPo7+Gc+/uk+g/yTWn2p1uD+nvX/qPoPzn8X8c8jPY78LmH8R
/ZdaHe7XZZz/SqvD/bra6rvv7lnMT76fPw9NyOf661O3/PB6DXk4znu930/d
w/2cR/98fx5ZQL6A/AbO75Ylrze9PvEclkXki/28YZ/IlzD/Vr9OYVn26i9d
xv63kcNyB/vDchf9sKygfwX52O3Xl8ZYP+7XG3JZRf9qv15hg2XS75dgnfTr
DZZ7vROssMFyH/3hmO+O52VYLw/QH45+5AbLQ/TDCls47v8j9MMKGyyP0Q8r
bPDwdxT9sMIGy1P0wwobLM/QDytssDxHP6ywwfIC/bDCFo7n9xL9sMIGyyv0
wwobLLn3CE5whhUuYb8+Q15heY35cIIzrGGfV5AbXGGZYn44/h8hz7DCBTa4
wvIG8+EEZ1jhAhtcYVlz+/WO1vo8wRlWuGA/Q16Ry3qfj+AEZ1jhAhtcYdnA
fDiF/bwZucIFNrjC8hbz4QRnWMPx/UducMV62cT8zT5PcMZ6hQts6K/Ih9+B
8f3b6vMEZ1jhAhtcYdnG/O0+T8hzOH4PIi//899C4g2B
            "]]}, "Charting`Private`Tag#5"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 213.}, {0, 2375.}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.578, 0.51, 0.85], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.455, 0.7, 0.21], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.95, 0.627, 0.1425], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction -> 
    Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
    Directive[FontSize -> 13, FontFamily -> "Lucida Sans Unicode", 
      GrayLevel[0]], 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    FrameTicksStyle -> 
    Directive[FontSize -> 13, FontFamily -> "Lucida Sans Unicode", 
      GrayLevel[0]], GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> Large, 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.95, 0.627, 0.1425], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {{0., 213.}, {0, 2375.}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"0.253 um\"", "\"0.298 um\"", "\"0.352 um\"", "\"0.414 um\"", 
       "\"0.488 um\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.578, 0.51, 0.85], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.578, 0.51, 0.85], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.455, 0.7, 0.21]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.578, 0.51, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9589824741406555`*^9, 3.958982539003277*^9}, 
   3.9589825697262764`*^9, {3.958982617802561*^9, 3.958982679326931*^9}, 
   3.958982741625841*^9, {3.958982777998144*^9, 3.958982792640541*^9}, {
   3.9589834116153755`*^9, 3.9589834166135273`*^9}, 3.9589854632033978`*^9, 
   3.9592593529371414`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"649356a7-34c8-bc42-b7e6-b99a691b1e28"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{894.75, 735},
WindowMargins->{{Automatic, -5.25}, {Automatic, 0}},
Visible->True,
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (March 14, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d5b15d05-fd80-854c-aa8f-9effd6c3173a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 156, 3, 66, "Section",ExpressionUUID->"84c2ba8c-37b4-5844-ae41-c23ee76209cd"],
Cell[CellGroupData[{
Cell[757, 29, 7335, 165, 710, "Input",ExpressionUUID->"131f9226-1c31-7b4e-bd14-5393e6503c83",
 InitializationCell->True],
Cell[8095, 196, 377, 6, 32, "Output",ExpressionUUID->"deffce19-0c18-0b41-873a-c7d63bf50349"],
Cell[8475, 204, 402, 6, 32, "Output",ExpressionUUID->"5bc774a7-9a2f-9743-a951-b0c2577b2829"],
Cell[8880, 212, 538, 11, 50, "Output",ExpressionUUID->"e71b857b-6408-7244-94cd-7626c3d3afaf"],
Cell[9421, 225, 9982, 219, 59, "Output",ExpressionUUID->"2cf35779-a649-0e46-bb07-42cfc1d9034d"],
Cell[19406, 446, 11230, 211, 59, "Output",ExpressionUUID->"b7048e50-e5a6-5f4b-a5d1-d6c869bd8315"],
Cell[30639, 659, 5222, 149, 51, "Output",ExpressionUUID->"22ec96c6-9dd7-804a-9fa2-98adb6f36b69"],
Cell[35864, 810, 2302, 58, 32, "Output",ExpressionUUID->"5c2e2c6c-2f86-2342-ab3e-762639f749d5"],
Cell[38169, 870, 1094, 24, 32, "Output",ExpressionUUID->"61db31a2-b019-4d45-93e4-616f12cb0ca2"],
Cell[39266, 896, 430, 7, 32, "Output",ExpressionUUID->"093a3b2c-9d26-d24e-8632-1d83d082be7d"],
Cell[39699, 905, 430, 7, 32, "Output",ExpressionUUID->"2da60e4c-a7a3-7846-8b43-303df735bf7f"],
Cell[40132, 914, 429, 7, 32, "Output",ExpressionUUID->"c665af7a-885f-9046-aae5-4bd6e8eb0edc"],
Cell[40564, 923, 941, 19, 45, "Output",ExpressionUUID->"16c719d7-2f1e-eb42-841a-bf25a77ad8c7"],
Cell[41508, 944, 97585, 2148, 2387, "Output",ExpressionUUID->"39a68750-60cf-b247-8db3-4904277cb897"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[139142, 3098, 160, 3, 52, "Section",ExpressionUUID->"873ede2e-4f52-2942-85e4-42f6ae7b5c04"],
Cell[139305, 3103, 736, 18, 47, "Input",ExpressionUUID->"ed486aad-c799-5a45-9e29-12981665215d"],
Cell[140044, 3123, 1378, 23, 120, "Input",ExpressionUUID->"2f09e95e-ad70-6249-a099-12ecf0a99b96",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[141459, 3151, 210, 4, 52, "Section",ExpressionUUID->"33ef52ee-0b32-644b-9301-4178678177d8"],
Cell[141672, 3157, 2151, 55, 123, "Input",ExpressionUUID->"fc96e137-97ba-b245-9af5-11cfed18a211"],
Cell[143826, 3214, 492, 11, 28, "Input",ExpressionUUID->"45a694e2-47c0-434c-a370-4c945930407a"],
Cell[CellGroupData[{
Cell[144343, 3229, 1571, 39, 66, "Input",ExpressionUUID->"0f38f304-3b30-2646-a213-41def8671f28"],
Cell[145917, 3270, 14523, 282, 838, "Output",ExpressionUUID->"93891dad-1cab-e741-9f28-cc17b7d6baa7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160477, 3557, 218, 3, 28, "Input",ExpressionUUID->"80f11709-1104-6d49-a539-0d5881e2e78a"],
Cell[160698, 3562, 285, 5, 35, "Output",ExpressionUUID->"5fde2e64-8dfa-d945-b495-53f0a1e06d2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161020, 3572, 292, 6, 28, "Input",ExpressionUUID->"e0cd4d19-bd19-804a-ae6c-50409b2ba3f5"],
Cell[161315, 3580, 298, 5, 35, "Output",ExpressionUUID->"d2a8447f-754c-f247-892f-2bb888e8f487"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161650, 3590, 659, 16, 47, "Input",ExpressionUUID->"d83f6c40-ad9d-3d47-abdb-d3867b4d3cf4"],
Cell[162312, 3608, 5014, 106, 59, "Output",ExpressionUUID->"458f2309-e2d4-e442-8ace-1954b3b8f099"],
Cell[167329, 3716, 605, 11, 48, "Output",ExpressionUUID->"74c947b3-e3c5-e64a-bc80-cb7592b54950"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167971, 3732, 272, 7, 28, "Input",ExpressionUUID->"5ec8b010-2ae4-2944-ac16-284a6b024f28"],
Cell[168246, 3741, 247, 4, 35, "Output",ExpressionUUID->"76e0be6a-50b9-1440-9e54-ba04d96529fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168530, 3750, 2685, 64, 123, "Input",ExpressionUUID->"2eb82eef-1642-744d-9fc6-2fcc4fd70b30"],
Cell[171218, 3816, 48171, 870, 290, "Output",ExpressionUUID->"4313fa5b-0dee-a84e-94a4-f5aacbdd1ab7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219426, 4691, 297, 7, 28, "Input",ExpressionUUID->"f40991cc-9914-f641-b727-1df9b4d2ed4c"],
Cell[219726, 4700, 1420, 36, 89, "Output",ExpressionUUID->"399fec24-1631-cf44-bcaa-73e9c69b7c57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221183, 4741, 302, 7, 28, "Input",ExpressionUUID->"d2d4e83a-a176-d746-82fd-695f307c7573"],
Cell[221488, 4750, 43693, 840, 270, "Output",ExpressionUUID->"3a28f2b7-61ab-e742-a195-a4754e3bdfbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265218, 5595, 208, 3, 28, "Input",ExpressionUUID->"635c6872-238e-e342-892d-fac14dbfa49d"],
Cell[265429, 5600, 249, 5, 32, "Output",ExpressionUUID->"0aaca1ef-69c3-9345-8b5f-1c4cb952368e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265715, 5610, 400, 10, 28, "Input",ExpressionUUID->"9f60d7ef-7420-9c4d-a97b-49ff2f43567a"],
Cell[266118, 5622, 14653, 339, 59, "Output",ExpressionUUID->"e5737204-b446-6548-a15d-5150addb0882"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280808, 5966, 513, 14, 28, "Input",ExpressionUUID->"a96045c6-30f5-2e4d-ba86-6ff674118bd3"],
Cell[281324, 5982, 512, 13, 26, "Message",ExpressionUUID->"c4db35ea-ee14-cf40-9e0f-da7e25862d2a"],
Cell[281839, 5997, 61698, 1233, 270, "Output",ExpressionUUID->"3b84d62e-c11c-c549-9f3f-0a6b575d7f4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343574, 7235, 827, 21, 47, "Input",ExpressionUUID->"401325e8-b4ae-ca45-9d13-2937edeb5df8"],
Cell[344404, 7258, 38870, 818, 383, "Output",ExpressionUUID->"649356a7-34c8-bc42-b7e6-b99a691b1e28"]
}, Open  ]]
}, Open  ]]
}
]
*)

